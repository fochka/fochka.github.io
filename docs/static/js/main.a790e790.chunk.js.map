{"version":3,"sources":["DBLib.js","Nodes.jsx","custumComponents.jsx","index.js","Controls.jsx","spreadsheet.js","editor.jsx"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","cookies","Cookies","getAllCafeInfo","_getAllCafeInfo","apply","arguments","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_callee","token","response","data","_context","get","prompt","setToken","fetch","process","concat","credentials","text","JSON","parse","t0","console","message","expires","Date","now","set","path","StepNode","_Node","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","output","formula","window","confirm","node","outputs","delete","stringify","update","_this$props","props","bindSocket","bindControl","_this$state","controls","inputs","selected","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","map","input","rete_react_render_plugin__WEBPACK_IMPORTED_MODULE_6__","socket","io","innerRef","showControl","control","_custumComponents__WEBPACK_IMPORTED_MODULE_7__","outputKey","Node","Selector","_React$Component","_getPrototypeOf2","_this","_len","args","Array","_key","isOpen","outName","readOnly","handleClick","e","setState","handleBlur","currentTarget","onClick","list","placeholder","onBlur","tabIndex","id","global","ss","items","item","React","Component","editorIsLoaded","emptyAnswerStr","useState","useEffect","clickArrange","editor","alert","trigger","clickCreateStep","_ref","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","stepName","sheetId","step","getComponent","addNewStepSheet","StepComponent","question","answers","href","getSheetUrlById","register","t1","createNode","t2","addNode","t3","App","addEventListener","event","preventDefault","_useState","_useState2","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","cafes","setCafes","_useState3","_useState4","options","setOptions","_useState5","_useState6","displayLoading","setDisplayLoading","_useState7","_useState8","displaySaving","setDisplaySaving","location","pathname","split","search","cafeId","_datesInit","_callee3","_context3","splice","cafeName","ssBackId","cafe","react__WEBPACK_IMPORTED_MODULE_2___default","datesInit","find","getCafeById","style","textAlign","action","onChange","target","width","height","saveRete","toJSON","generateGraphSheet","display","ref","el","init","res","includes","_unused3","rootElement","document","getElementById","ReactDOM","render","stepSocket","Socket","MyReactControl","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","putData","react__WEBPACK_IMPORTED_MODULE_6___default","InvisibleComponent","_React$Component2","_getPrototypeOf3","_this2","_len2","_key2","ButtonComponent","_React$Component3","_getPrototypeOf4","_this3","_len3","_key3","_this4","emitter","nodes","x","size","addOutput","Output","bind","HrefComponent","_React$Component4","_getPrototypeOf5","_this5","_len4","_key4","rel","HrefControl","_Control","_this6","component","Control","TextControl","_Control2","_this7","_arguments","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","InvisibleControl","_Control3","_this8","_arguments2","ButtonControl","_Control4","_this9","GoogleSpreadsheet","require","apiSheetKey","Spreadsheet","loadSSGraph","ssId","steps","allSheets","sheet","cell","nextSteps","j","_cell","answer","doc","useServiceAccountAuth","loadInfo","sheetsByIndex","title","startsWith","substring","trim","sheetsByTitle","loadCells","endColumnIndex","getCell","rowCount","resize","columnCount","position","graph","loadItems","log","_x","_x2","_spreadsheetUrl","getSheetUrlByTittle","tittle","_callee2","rows","rowsWithoutEmptyNames","_context2","getRows","filter","_rawData","remeberToDeleteStep","sheetsToDelete","toRete","reteGraph","pos","idx","_step","_i","nodeIdx","nextNodeIdx","connections","findNodeIdxByStep","_unused2","deleteSheets","_ref4","_callee4","stepsCount","graphSheet","startIdx","_context4","sheetName","clearRows","start","end","_x3","_x4","_ref5","_callee5","ssStep","dest","_question","_context5","columnIdx","printArrayToSheet","_x5","_ref6","_callee6","oldSheetName","rowIdx","_context6","clear","addSheet","gridProperties","assign","saveUpdatedCells","addStepToGraphSheet","_x6","_x7","_ref7","_callee7","array","_context7","_x8","_x9","_ref8","_callee8","needAddStepToGraphSheet","_context8","_x10","_ref9","_callee9","_cell2","_context9","Math","ceil","_x11","_x12","loading","_Rete$Component","ssData","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","addControl","inp","Rete","Input","combineWith","out","addInput","container","engine","NodeEditor","use","ConnectionPlugin","ReactRenderPlugin","ContextMenuPlugin","ConnectionPathPlugin","curve","curveBumpY","arrow","color","marker","transformer","_ref2","_ref3","x1","y1","x2","y2","AutoArrangePlugin","margin","y","depth","Engine","on","abort","fromJSON","view","AreaPlugin","zoomAt","__webpack_exports__"],"mappings":"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","file":"static/js/main.a790e790.chunk.js","sourcesContent":["import Cookies from 'universal-cookie';\r\nconst cookies = new Cookies();\r\n\r\nexport async function getAllCafeInfo() {\r\n    try {\r\n        let token = cookies.get('token');\r\n        if (!token) {\r\n            token = prompt('Токен для авторизации');\r\n            if (!token) return;\r\n            setToken(token);\r\n        }\r\n        const response = await fetch(process.env.REACT_APP_FEEDMER_URL+`/getAllCafeInfo/${token}`, {\r\n            credentials: 'include'\r\n        });\r\n        const data = await response.text();\r\n        return JSON.parse(data);\r\n    } catch (e) {\r\n        console.error(`getAllCafeInfo failed`, e.message || e);\r\n    }\r\n}\r\n\r\nexport function setToken(token) {\r\n    const expires =  new Date(Date.now() + 3*30*24*60*60*1000);\r\n    cookies.set('token', token, { path: '/', expires: expires });\r\n}","import React from \"react\";\r\nimport { Node, Socket, Control } from \"rete-react-render-plugin\";\r\nimport { Selector } from \"./custumComponents\"\r\n\r\nexport class StepNode extends Node {\r\n  \r\n  onClick(output) {\r\n    const name = JSON.parse(output.name);\r\n    if (name.formula) return;\r\n    name.value = prompt('',  name.value);\r\n    if (name.value === null) return\r\n    if (name.value === '') {\r\n      if(!window.confirm(`Удалить ответ ${output.name.value} на шаге ${output.node.name}?`)) return;\r\n      output.node.outputs.delete(output.key)\r\n    };\r\n    output.name = JSON.stringify(name);\r\n    output.node.update();\r\n  }\r\n\r\n  render() {\r\n    const { node, bindSocket, bindControl } = this.props;\r\n    const { outputs, controls, inputs, selected } = this.state;\r\n\r\n    return (\r\n      <div className={`node ${selected}`}>\r\n        {/* Inputs */}\r\n        {inputs.map(input => (\r\n          <div className=\"input\" key={input.key}>\r\n            <Socket\r\n              type=\"input\"\r\n              socket={input.socket}\r\n              io={input}\r\n              innerRef={bindSocket}\r\n            />\r\n            {!input.showControl() && (\r\n              <div className=\"input-title\">{input.name}</div>\r\n            )}\r\n            {input.showControl() && (\r\n              <Control\r\n                className=\"input-control\"\r\n                control={input.control}\r\n                innerRef={bindControl}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n        <div className=\"title\">{node.name}</div>\r\n        {/* Controls */}\r\n        {controls.map(control => (\r\n          <Control\r\n            className=\"control\"\r\n            key={control.key}\r\n            control={control}\r\n            innerRef={bindControl}\r\n          />\r\n        ))}\r\n        {/* Outputs */}\r\n        <div>\r\n        {outputs.map((output, key) => (\r\n          <Selector\r\n            output={output}\r\n            outputKey={output.key}\r\n            innerRef={bindSocket}\r\n          />\r\n        ))\r\n        \r\n        \r\n        /*outputs.map(output => (\r\n          <div className=\"output\" key={output.key}>\r\n            <div className=\"output-title\" onClick={() => this.onClick(output)} >{\r\n              JSON.parse(output.name).value || ''\r\n            }</div>\r\n            <Socket\r\n              type=\"output\"\r\n              socket={output.socket}\r\n              io={output}\r\n              innerRef={bindSocket}\r\n            />\r\n            <Selector/>\r\n          </div>\r\n        ))*/}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Socket } from \"rete-react-render-plugin\";\r\n\r\nexport class Selector extends React.Component {\r\n    state = { isOpen: false, outName: JSON.parse(this.props.output.name || {}).value || '', readOnly: false }\r\n        \r\n    handleClick = e => {\r\n      if (!this.state.readOnly)\r\n        this.setState({ isOpen: true })\r\n    }\r\n    handleBlur = (e) => {\r\n      if (!e.currentTarget.value) return;\r\n      this.state.outName = e.currentTarget.value;\r\n      const obj = JSON.parse(this.props.output.name);\r\n      obj.value = e.currentTarget.value;\r\n      this.props.output.name = JSON.stringify(obj);\r\n      this.props.output.key = JSON.stringify(obj);\r\n      this.props.output.node.outputs.delete(this.props.outputKey);\r\n      this.props.output.node.outputs.set(this.props.output.key, this.props.output);\r\n      this.props.output.node.update();\r\n      this.setState({ isOpen: false });\r\n    }\r\n  \r\n    render() {\r\n      const { isOpen } = this.state; \r\n      const name = JSON.parse(this.props.output.name || {});\r\n      if (name && name.formula) this.state.readOnly = true;\r\n  \r\n      return (\r\n        <div>\r\n          <div className=\"output\" key={ this.props.output.key }>\r\n            <div className=\"output-title\" onClick = { this.handleClick }>\r\n              {!isOpen && this.state.outName }\r\n              {isOpen && <input type=\"text\" list=\"items\" placeholder={this.state.outName}  onBlur = { this.handleBlur }  tabIndex = { 0 }/> } \r\n              <Socket\r\n                type=\"output\"\r\n                socket={this.props.output.socket}\r\n                io={this.props.output}\r\n                innerRef={this.props.innerRef}\r\n              /> \r\n              <datalist id=\"items\">\r\n                {global.ss.items.map((item) => \r\n                  <option value={item.name} key={item.name}>{item.name}</option>\r\n                )}\r\n              </datalist>            \r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport init, {StepComponent} from \"./editor\";\r\nimport { getAllCafeInfo, setToken } from \"./DBLib.js\";\r\nimport \"./styles.css\"; \r\nimport { Spreadsheet } from \"./spreadsheet.js\";\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nglobal.editorIsLoaded = false;\r\nglobal.emptyAnswerStr = ' — ';\r\nconst {useState, useEffect} = React;\r\nconst clickArrange = () => {\r\n  if(!(global.editor)) return alert('Редактор занят');\r\n  global.editor.trigger('arrange', 10);\r\n}\r\n\r\nconst clickCreateStep = async () => {\r\n  if(!(global.editorIsLoaded)) return alert('Редактор занят');\r\n  const stepName = prompt('Название шага');\r\n  if(!stepName) return; \r\n  try {\r\n    if (global.editor.getComponent(stepName)) return alert('Шаг с таким именем уже зарегистрирован');\r\n  } catch{}\r\n  try {\r\n    const sheetId = await global.ss.addNewStepSheet(stepName);\r\n    if(!sheetId) throw new Error('No sheetId');\r\n    const step = new StepComponent(stepName, {        \r\n      question: {value: 'question'},\r\n      answers: [ JSON.stringify({value: 'answer'}) ],\r\n      href: global.ss.getSheetUrlById(sheetId),\r\n    }); \r\n    global.editor.register(step);\r\n    global.editor.addNode(await step.createNode());\r\n  }\r\n  catch{\r\n    return alert('Не удалось создать лист \"Шаг ' + stepName + '\" в гугл таблице. Возможно такой шаг уже создан');\r\n  }\r\n}\r\n\r\nconst clickImport = async () => {\r\n  if(!(global.editorIsLoaded)) return alert('Редактор занят');\r\n  const ss = new Spreadsheet();\r\n  await ss.loadSSGraph(-1, prompt('ID гугл-таблицы:'));\r\n  let graph1 = await ss.toRete();\r\n  let graph2 = await global.editor.toJSON();\r\n  const firstId = Object.keys(graph2.nodes).length;\r\n  for(let i = 0; i < Object.keys(graph1.nodes).length; i++){\r\n    graph1.nodes[i].id = firstId + i;\r\n    graph1.nodes[firstId + i] = graph1.nodes[i];\r\n\r\n    await global.ss.addStepToGraphSheet(graph1.nodes[i].name);\r\n    \r\n    let step = new StepComponent(graph1.nodes[i].name, {        \r\n      question: '',\r\n      answers: [],\r\n      href: '',\r\n    }); \r\n    global.editor.register(step);\r\n    delete graph1.nodes[i];\r\n  } \r\n  graph2.nodes = Object.assign({}, graph2.nodes, graph1.nodes);\r\n  global.editor.fromJSON(graph2);\r\n  \r\n  for(let node in graph1.nodes){\r\n    let ssStep = graph1.nodes[node].name;\r\n    await global.ss.addStepToGraphSheet(ssStep);\r\n  }\r\n  /*\r\n    >>>>> TO-DO: Протестить эту функцию\r\n    + загружать инфу о наличии формулы в кнопках\r\n  */\r\n\r\n}\r\n\r\nfunction getCafeById(cafeId, cafes){\r\n  if(!cafeId) return false;\r\n  const cafe = cafes.find(val => val.cafeId === cafeId);\r\n  return (cafe)? cafe : false;\r\n}\r\n\r\n\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    const handleWindowBeforeUnload = event => {\r\n      if (!(global.editorIsLoaded)) {\r\n        event.preventDefault();\r\n        alert('Ну видишь же, загружается'); // <<<<<< Не работает!\r\n      }\r\n    };\r\n    window.addEventListener('beforeunload', handleWindowBeforeUnload);\r\n  }, []);\r\n  \r\n  function clickChangeCafe() {\r\n    if(!(global.editorIsLoaded)) return alert('Редактор занят');\r\n    window.location.search = '';\r\n    setCafes();\r\n  }\r\n\r\n  function clickSave() {\r\n    if(!(global.editorIsLoaded)) return alert('Редактор занят');\r\n    try{\r\n      global.editorIsLoaded = false;\r\n      setDisplaySaving('block');\r\n      global.ss.saveRete(global.editor.toJSON()).then(\r\n        result => { setDisplaySaving('none'); global.editorIsLoaded = true; return alert('Сценарий сохранен'); },\r\n        error => { setDisplaySaving('none'); global.editorIsLoaded = true; return alert('Сценарий не сохранен'); }\r\n      );\r\n    }\r\n    catch(e){\r\n      setDisplaySaving('none'); \r\n      global.editorIsLoaded = true;\r\n      return alert('Сценарий не сохранен, ошибка ' + e.message)\r\n    }\r\n  };\r\n\r\n  function generateGraphSheet() {\r\n    if(!(global.editorIsLoaded)) return alert('Редактор занят');\r\n    if(!window.confirm('Граф буден сохранен в лист \"Граф (сгенерированный)\". Если такой лист уже существует, он будет перезаписан. Продолжить?')) return;\r\n    global.editorIsLoaded = false;\r\n    try{\r\n      global.ss.generateGraphSheet('Граф (сгенерированный)', global.editor.toJSON()).then(\r\n        result => { global.editorIsLoaded = true; return alert('Лист графа успешно создан'); },\r\n        error => { global.editorIsLoaded = true; return alert('Не удалость создать лист графа'); }\r\n      );\r\n    }\r\n    catch(e){\r\n      global.editorIsLoaded = true;\r\n      return alert('Сценарий не сохранен, ошибка ' + e.message)\r\n    }\r\n  };\r\n\r\n  const [cafes, setCafes] = useState('');\r\n  const [options, setOptions] = useState('');\r\n  const [displayLoading, setDisplayLoading] = useState('block');\r\n  const [displaySaving, setDisplaySaving] = useState('none');\r\n\r\n  let path = window.location.pathname;\r\n  path = path.split('/');\r\n  if ((path.length > 2) && path[1] === 'set-token') {\r\n    setToken(path[2]);\r\n    window.location.pathname = '';\r\n  }\r\n\r\n  let search = window.location.search;\r\n  search = search.split('=');\r\n  const cafeId = ((search.length>0)||(search[0] === '?cafeid'))? search[1] : false;\r\n  \r\n  useEffect(() => {\r\n    async function datesInit() {\r\n      const data = (await getAllCafeInfo()) || [];\r\n      if(cookies.get('tempGraph')) {\r\n        data.splice(0, 0, {\r\n            cafeId: 'tempGraphCached',\r\n            cafeName: 'Новый граф',\r\n            ssBackId: cookies.get('tempGraph'),\r\n        });\r\n      }\r\n      data.push({\r\n          cafeId: 'tempGraph',\r\n          cafeName: 'Другой граф',\r\n      });\r\n      setCafes(data);      \r\n      setOptions(data.map((cafe) => {\r\n        return <option value={cafe.cafeId} key={cafe.cafeId}>{cafe.cafeName}</option>;\r\n      }));\r\n      //setDropDown(createDropDown(cafes));\r\n    }    \r\n    datesInit();\r\n  }, []);\r\n\r\n  if(!cafes)\r\n    return 'Получаем информацию о кафе от ' + process.env.REACT_APP_FEEDMER_URL+`/getAllCafeInfo....`;\r\n  let cafe = getCafeById(cafeId, cafes);\r\n  if((cafe) && (!cafe.ssBackId)) {\r\n    cafe.ssBackId = prompt('ID гугл-таблицы:');\r\n    if(cafe.ssBackId) {\r\n      cookies.set(cafe.cafeId, cafe.ssBackId, { path: '/' });\r\n      window.location.search = '?cafeId=tempGraphCached';\r\n      return;\r\n    }\r\n    else cafe = null;\r\n  }   \r\n  if(cafe){ \r\n    try {\r\n      return (\r\n        <div className=\"App\">\r\n          <div style={{ textAlign: \"left\", width: \"100vw\", height: \"100vh\" }}>\r\n            <div className='header'>\r\n              <input type='button' value=\"Сохранить\" className='menu_button' onClick={clickSave} />\r\n              <input type='button' value=\"Выбор кафе\" className='menu_button' onClick={clickChangeCafe} />\r\n              {//<input type='button' value=\"Импорт\" class='menu_button' onClick={clickImport} />\r\n              }\r\n              <input type='button' value=\"Автоперестановка\" className='menu_button' onClick={clickArrange} />\r\n              <input type='button' value=\"Создать лист графа\" className='menu_button' onClick={generateGraphSheet} />\r\n              <input type='button' value=\"Создать шаг\" className='step_button' onClick={clickCreateStep} />\r\n              <b>{cafe.cafeName}</b>\r\n            </div>\r\n            <div  style={{display: displayLoading}}>\r\n              <h1> Загружаем... </h1>\r\n            </div>\r\n            <div  style={{display: displaySaving}}>\r\n              <h1> Сохраняем... </h1>\r\n            </div>\r\n            <div id='canvas' ref={el => (init(el, cafe))\r\n              .then((res) => { if (res !== false) setDisplayLoading('none') } )\r\n              .catch(e => {\r\n                try {\r\n                  if(!e.message.includes('style')) throw e;//setDisplayLoading('block');\r\n                  //else throw e;\r\n                } catch { \r\n                  alert('Не удалось загрузить граф ' +e);\r\n                  console.error(e);\r\n                  setDisplayLoading('none')\r\n                }\r\n                }) \r\n              } />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    catch(e) {\r\n      return alert('Не удалось отобразить выбранный граф');\r\n    }\r\n  }\r\n  else{\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>FeedMer chatbot constructor</h1>\r\n        <div style={{ textAlign: \"left\" }}>\r\n          <form action=\"\" method=\"GET\">\r\n            <label>\r\n            Выберите кафе:\r\n            <select value={cafes} name='cafeid' onChange={(event) => setCafes(event.target.value)}>\r\n                {options}\r\n            </select>\r\n            </label>\r\n            <input type=\"submit\" value=\"Выбрать\" className='menu_button' />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n","import React from \"react\";\r\nimport { Control, Output, Socket} from \"rete\";\r\n\r\nvar stepSocket = new Socket(\"Соединить с другим шагом\");\r\n\r\nclass MyReactControl extends React.Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.name\r\n    });\r\n    //console.log(this.props);\r\n    this.props.putData(this.props.id, this.props.name);\r\n  }\r\n  onChange(event) {\r\n    this.props.putData(this.props.id, event.target.value);\r\n    //this.props.emitter.trigger(\"process\");\r\n    this.setState({\r\n      name: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //<textarea readOnly>{this.state.name}</textarea>\r\n      <input value={this.state.name} readOnly/* onChange={this.onChange.bind(this)}*/ />\r\n    );\r\n  }\r\n}\r\n\r\nclass InvisibleComponent extends React.Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.name\r\n    });\r\n    this.props.putData(this.props.id, this.props.name);\r\n  }\r\n  onChange(event) {\r\n    this.props.putData(this.props.id, event.target.value);\r\n    this.setState({\r\n      name: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (<b/>);\r\n  }\r\n}\r\n\r\nclass ButtonComponent extends React.Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.name\r\n    });\r\n  }\r\n  onClick(event) {\r\n    const node = this.props.emitter.nodes.find(x => {return this.props.name === x.name})\r\n    const text = JSON.stringify({ value: 'answer' + (node.outputs.size + 1)});\r\n    if(node){\r\n      node.addOutput(\r\n        new Output(text, text, stepSocket, false)\r\n      );\r\n      node.update();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"right_div\">\r\n        <button type=\"button\" className=\"node_submit\" onClick={this.onClick.bind(this)}>+</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass HrefComponent extends React.Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.name\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <a href={this.state.name} target=\"_blank\" rel=\"noopener noreferrer\">\"Перейти к таблице\"</a>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport class HrefControl extends Control {\r\n  constructor(emitter, key, name) {\r\n    super(key);\r\n    this.render = \"react\";\r\n    this.component = HrefComponent;\r\n    this.props = {\r\n      emitter,\r\n      id: key,\r\n      name,\r\n      //putData: () => this.putData.apply(this, arguments)\r\n    };\r\n  }\r\n}\r\n\r\nexport class TextControl extends Control {\r\n  constructor(emitter, key, name) {\r\n    super(key);\r\n    this.render = \"react\";\r\n    this.component = MyReactControl;\r\n    this.props = {\r\n      emitter,\r\n      id: key,\r\n      name,\r\n      putData: () => this.putData.apply(this, arguments)\r\n    };\r\n  }\r\n}\r\n\r\nexport class InvisibleControl extends Control {\r\n  constructor(emitter, key, name) {\r\n    super(key);\r\n    this.render = \"react\";\r\n    this.component = InvisibleComponent;\r\n    this.props = {\r\n      emitter,\r\n      id: key,\r\n      name,\r\n      putData: () => this.putData.apply(this, arguments)\r\n    };\r\n  }\r\n}\r\n\r\nexport class ButtonControl extends Control {\r\n  constructor(emitter, key, name) {\r\n    super(key);\r\n    this.render = \"react\";\r\n    this.component = ButtonComponent;\r\n    this.props = {\r\n      emitter,\r\n      id: key,\r\n      name,\r\n      //putData: () => this.putData.apply(this, arguments)\r\n    };\r\n  }\r\n}\r\n\r\nexport { stepSocket };\r\n","//import { useState } from \"react\";\r\nconst POS_COLUMN_IDX = 23;\r\nconst ONE_STEP_ROW_COUNT = 30; // Не менять\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\nconst apiSheetKey = require('./client_secret_google_sheets.json');\r\n        //const [error, setError] = useState(Error());\r\n\r\nexport class Spreadsheet {\r\n    constructor(){\r\n        this.graph = null;\r\n        this.sheetName =  'Граф';\r\n        this.sheetsToDelete = [];\r\n        this.items = [];\r\n    }\r\n    loadSSGraph = async (cafeId, ssId) => {        \r\n        try{\r\n            if(ssId === this.ssId)\r\n                return;\r\n            this.cafeId = cafeId;\r\n            this.ssId = ssId;\r\n            this.doc = new GoogleSpreadsheet(this.ssId);\r\n            await this.doc.useServiceAccountAuth(apiSheetKey);\r\n            await this.doc.loadInfo();\r\n            let steps = {};\r\n            const allSheets = this.doc.sheetsByIndex;\r\n            for (let i = 0; i < allSheets.length; i++) {\r\n                if (!(allSheets[i].title.startsWith('Шаг'))) continue;\r\n                // Add formuls to question and answers        \r\n                let stepName = allSheets[i].title.substring(3).trim();\r\n                if((stepName) && (!Object.keys(steps).includes(stepName))){\r\n                    let sheet = this.doc.sheetsByTitle['Шаг ' + stepName];\r\n                    if (sheet) {\r\n                        await sheet.loadCells({ endColumnIndex: 3 });\r\n                        let cell = sheet.getCell(0, 0);\r\n                        let question = { value: cell.value, formula: cell.formula };\r\n                        \r\n                        if (sheet.rowCount < ONE_STEP_ROW_COUNT) {\r\n                            await sheet.resize({ rowCount: ONE_STEP_ROW_COUNT, columnCount: sheet.columnCount });\r\n                            await sheet.loadCells({ endColumnIndex: 3 });\r\n                        }\r\n\r\n                        let answers = [];\r\n                        let nextSteps = [];\r\n                        for (let j = 1; j < ONE_STEP_ROW_COUNT; j++) {\r\n                            let cell = sheet.getCell(j, 0);\r\n                            if ((cell.value) || (cell.formula)) {\r\n                                let answer = JSON.stringify({ value: cell.value, formula: cell.formula })\r\n                                if (answers.includes(answer)) continue;\r\n                                answers.push(answer);\r\n                                cell = sheet.getCell(j, 1);\r\n                                nextSteps.push(JSON.stringify({ value: cell.value, formula: cell.formula }));\r\n                            }\r\n                        }\r\n                        await sheet.loadCells('X1');\r\n                        cell = sheet.getCell(0, POS_COLUMN_IDX);\r\n                        steps[stepName] = {\r\n                            question: question,\r\n                            answers: answers,\r\n                            nextSteps: nextSteps,\r\n                            position: JSON.parse(cell.value) || null,\r\n                        };\r\n                    }\r\n                    /*else {\r\n                        let question = { value: res[i].question };\r\n                        let answers = res.filter( x => x.step === stepName );\r\n                        answers.forEach(x => { x.answer = JSON.stringify({ value: x.answer }) });\r\n                        let nextSteps = res.filter( x => x.step === stepName );\r\n                        //nextSteps.forEach(x => { x.nextStep = JSON.stringify({ value: x.nextStep }) });\r\n                        steps[stepName] = {\r\n                            question: question,\r\n                            answers: answers,\r\n                            nextSteps: nextSteps,\r\n                            position: null,\r\n                        };\r\n                    }*/\r\n                }\r\n            }\r\n            this.graph = steps;\r\n            await this.loadItems();\r\n            console.log('Graph are loaded');\r\n            return true;\r\n        }\r\n        catch(e){\r\n            //setError(e);\r\n            console.error(`Cannot load graph from goodle with ssId = ${this.ssId}`, Error(e.message || e));\r\n            throw e; \r\n        }\r\n    }\r\n\r\n    getSheetUrlById = (sheetId) => {\r\n        return this.doc._spreadsheetUrl + '#gid=' + sheetId;\r\n    }\r\n\r\n    getSheetUrlByTittle = (tittle) => {\r\n        const sheet = this.doc.sheetsByTitle[tittle];\r\n        const url = (sheet)? this.getSheetUrlById(sheet.sheetId) : null;\r\n        return url;\r\n    }\r\n\r\n    loadItems = async () => {\r\n        try {\r\n            const sheet = this.doc.sheetsByTitle['Общий справочник'];\r\n            if (!sheet) throw new Error('Лист \"Общий справочник\" не найден');\r\n            let rows = await sheet.getRows();\r\n            let rowsWithoutEmptyNames = rows.filter(x => (x._rawData.length >= 3 && x._rawData[3] !== \"\"));\r\n            for (let i = 0; i < rowsWithoutEmptyNames.length; i++) {\r\n                let name = \"\";\r\n                if (rowsWithoutEmptyNames[i]._rawData[0] !== undefined) name = rowsWithoutEmptyNames[i]._rawData[0].trim();\r\n                this.items.push({name : name});\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n    }\r\n\r\n    remeberToDeleteStep = (stepName) => {                \r\n        this.sheetsToDelete.push(stepName);\r\n    }\r\n\r\n    toRete = async() => {\r\n        let reteGraph = {\r\n            id: `demo@0.1.0`,//`cafe${this.cafeId}`,\r\n            nodes: {}\r\n        }\r\n        let pos = -800;\r\n        let idx = 0;\r\n        for (let step in this.graph) {\r\n            try{\r\n                let answers = this.graph[step].answers;\r\n                let outputs = {};\r\n                for(let i = 0; i < answers.length; i++){\r\n                    if(answers[i])\r\n                        outputs[answers[i]] = { connections: [] }\r\n                }\r\n                reteGraph.nodes[idx] = {\r\n                    id: idx,\r\n                    data: {},\r\n                    inputs: { \"step\": { connections: [] } },\r\n                    name: step,\r\n                    outputs: outputs,\r\n                    position: this.graph[step].position || [pos+=300, -100],\r\n                }\r\n                idx++;\r\n            }\r\n            catch(e){}\r\n        }\r\n\r\n        //Connections\r\n        for (let step in this.graph) {\r\n            for (let i = 0; i < this.graph[step].nextSteps.length; i++) {\r\n                try{\r\n                    //if(this.graph[i].answer == 'Назад') continue;\r\n                    let nodeIdx = this.findNodeIdxByStep(reteGraph, step);\r\n                    let nextNodeIdx = this.findNodeIdxByStep(reteGraph, JSON.parse(this.graph[step].nextSteps[i]).value);\r\n                    if((nextNodeIdx === false)||(nodeIdx === false)||(nextNodeIdx === undefined)||(nodeIdx === undefined)) continue;\r\n                    reteGraph.nodes[nodeIdx].outputs[this.graph[step].answers[i]] = {  \r\n                        connections: [ \r\n                            {\r\n                                node: nextNodeIdx,\r\n                                input: 'step',\r\n                                data: {}\r\n                            } \r\n                        ] \r\n                    }\r\n                    reteGraph.nodes[nextNodeIdx].inputs['step'].connections.push({\r\n                        node: nodeIdx,\r\n                        output: this.graph[step].answers[i],\r\n                        data: {},\r\n                    } )\r\n                }\r\n                catch{\r\n                    try{\r\n                        console.error(`load connection failed between steps \"${step}\" and \"${JSON.parse(this.graph[step].nextSteps[i]).value}\"`)\r\n                    }catch{}\r\n                }\r\n            }\r\n        }\r\n\r\n        return reteGraph;\r\n    }\r\n\r\n    findNodeIdxByStep = (reteGraph, step) => {\r\n        for(let node in reteGraph.nodes){\r\n            if(reteGraph.nodes[node].name === step)\r\n                return node;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    deleteSheets = async(sheetsToDelete, stepsCount) => {\r\n        if(!sheetsToDelete || !this.sheetName || (sheetsToDelete.length < 1)) return;\r\n        const graphSheet = await this.doc.sheetsByTitle[this.sheetName];\r\n        const rowCount = (sheetsToDelete.length + stepsCount) * ONE_STEP_ROW_COUNT + 1;\r\n        await graphSheet.loadCells('A1:A' + rowCount);\r\n        for(let i = 0; i < sheetsToDelete.length; i++){        \r\n            const sheet = this.doc.sheetsByTitle['Шаг ' + sheetsToDelete[i]];\r\n            if(sheet) await sheet.delete();\r\n            //sheet.clearRows\r\n            let startIdx = -1;\r\n            //let endIdx = -1;\r\n            for(let j = 1; j < rowCount; j++){\r\n                let cell = graphSheet.getCell(j, 0);\r\n                if(cell.value === sheetsToDelete[i]) {\r\n                    if(startIdx<0) startIdx = j;\r\n                    //endIdx = j;\r\n                }\r\n            }\r\n            await graphSheet.clearRows({start: startIdx+1, end: startIdx+ONE_STEP_ROW_COUNT});  \r\n        }\r\n        this.sheetsToDelete = [];        \r\n    }\r\n\r\n    saveRete = async(reteGraph) => {\r\n        await this.deleteSheets(this.sheetsToDelete, Object.keys(reteGraph.nodes).length);\r\n        for(let node in reteGraph.nodes){            \r\n            let question = (reteGraph.nodes[node].data.question.formula) ? reteGraph.nodes[node].data.question.formula : reteGraph.nodes[node].data.question.value;\r\n            let ssStep = [\r\n                //[reteGraph.nodes[node].name],\r\n                [\r\n                    {value: question },\r\n                    {value: JSON.stringify(reteGraph.nodes[node].position), columnIdx: POS_COLUMN_IDX},\r\n                ],\r\n            ]\r\n            for(let output in reteGraph.nodes[node].outputs){\r\n                try{\r\n                    let dest;\r\n                    if(reteGraph.nodes[node].outputs[output].connections.length < 1)\r\n                        dest = { name: \"\", data: { question: \"\" }};\r\n                    else\r\n                        dest = reteGraph.nodes[reteGraph.nodes[node].outputs[output].connections[0].node];\r\n                    let answer = JSON.parse(output);\r\n                    answer = (answer.formula) ? answer.formula : answer.value;\r\n                    let question = (dest.data.question.formula) ? dest.data.question.formula : dest.data.question.value;\r\n                    ssStep.push([\r\n                        {value: answer},\r\n                        {value: dest.name},\r\n                        {value: question},\r\n                    ]);\r\n                    /*ssGraph.push({\r\n                        step: reteGraph.nodes[node].name,\r\n                        question: reteGraph.nodes[node].data.question,\r\n                        answer: output,\r\n                        nextStep: dest.name,\r\n                        nextQuestion: dest.data.question,\r\n                    })*/\r\n                }\r\n                catch{}\r\n            }\r\n            await this.printArrayToSheet(ssStep, \"Шаг \" + reteGraph.nodes[node].name);\r\n        }\r\n        //await this.printArrayToSheet(ssGraph, \"Граф (собранный)\");\r\n    }\r\n\r\n    generateGraphSheet = async(sheetName, reteGraph) => {\r\n        try {\r\n            const oldSheetName = this.sheetName;\r\n            this.sheetName = sheetName;\r\n        \r\n            let sheet;\r\n            if(this.doc.sheetsByTitle[sheetName]) {\r\n                sheet = this.doc.sheetsByTitle[sheetName];\r\n                sheet.clear();\r\n            } else {\r\n                sheet = await this.doc.addSheet({\r\n                    \"title\": sheetName,\r\n                    \"gridProperties\": {\r\n                        \"rowCount\": 6000,\r\n                        \"columnCount\": 30\r\n                    }\r\n                });\r\n            }\r\n            await sheet.loadCells('A1:E1');\r\n            let cell = await sheet.getCell(0, 0);\r\n            Object.assign(cell, { value: 'step' } ); \r\n            cell = await sheet.getCell(0, 1);\r\n            Object.assign(cell, { value: 'question' } );\r\n            cell = await sheet.getCell(0, 2);\r\n            Object.assign(cell, { value: 'answer' } );\r\n            cell = await sheet.getCell(0, 3);\r\n            Object.assign(cell, { value: 'nextStep' } );\r\n            cell = await sheet.getCell(0, 4);\r\n            Object.assign(cell, { value: 'nextQuestion' } );\r\n            await sheet.saveUpdatedCells();\r\n\r\n            let rowIdx = 0;\r\n            for(let node in reteGraph.nodes){\r\n                let ssStep = reteGraph.nodes[node].name;\r\n                await this.addStepToGraphSheet(ssStep, rowIdx);\r\n                rowIdx += ONE_STEP_ROW_COUNT;\r\n            }\r\n            this.sheetName = oldSheetName;\r\n        }\r\n        catch (e) {\r\n            console.error('generateGraphSheet failed!', e);\r\n            throw e;\r\n\r\n        }\r\n    }\r\n\r\n    printArrayToSheet = async(array, sheetName) => {\r\n        try {\r\n            let sheet;    \r\n            if(this.doc.sheetsByTitle[sheetName]) {\r\n                sheet = this.doc.sheetsByTitle[sheetName];\r\n            } else {\r\n                sheet = await this.doc.addSheet({\r\n                    \"title\": sheetName,\r\n                    \"gridProperties\": {\r\n                        \"rowCount\": ONE_STEP_ROW_COUNT,\r\n                        \"columnCount\": 30\r\n                    }\r\n                });\r\n            }\r\n            await sheet.clear('A1:C'+ONE_STEP_ROW_COUNT);\r\n            await sheet.loadCells(['A1:Z1', 'A1:C'+array.length]);\r\n\r\n            if (array.length === 0) {\r\n                let initCell= await sheet.getCell(0,0);\r\n                initCell.value = \"Нет данных\";\r\n            }\r\n    \r\n            for (let i=0; i<array.length; i++) {\r\n                if(array[i] === undefined || array[i] === null) continue;\r\n                for(let j=0; j<=array[i].length; j++)  {\r\n                    if(!array[i][j] || !(array[i][j].value)) continue;\r\n                    let cell = await sheet.getCell(i, array[i][j].columnIdx || j);\r\n                    Object.assign(cell, array[i][j]);    \r\n                }\r\n            }\r\n            await sheet.saveUpdatedCells();    \r\n        } catch (e) { \r\n            console.error(`printing to spreadsheet (id: ${this.ssId}) is failed`, e.message);\r\n            throw e; \r\n        }\r\n    }\r\n\r\n    addNewStepSheet = async(stepName) => {   \r\n        try{           \r\n            let sheet;\r\n            let needAddStepToGraphSheet = false;\r\n            if(this.doc.sheetsByTitle['Шаг ' + stepName]) {\r\n                sheet = this.doc.sheetsByTitle['Шаг ' + stepName];\r\n                sheet.clear();\r\n            }\r\n            else {\r\n                needAddStepToGraphSheet = true;\r\n                 sheet = await this.doc.addSheet({\r\n                    \"title\": 'Шаг ' + stepName,\r\n                    \"gridProperties\": {\r\n                        \"rowCount\": ONE_STEP_ROW_COUNT,\r\n                        \"columnCount\": 30\r\n                    }\r\n                });\r\n            }\r\n            const array = [\r\n                [{value: \"question\"}],\r\n                [{value: \"answer1\"}, {value: \"nextStep1\"}, {value: \"nextQuestion1\"}],\r\n\r\n            ]\r\n            await this.printArrayToSheet(array, 'Шаг ' + stepName);\r\n            if (needAddStepToGraphSheet) await this.addStepToGraphSheet(stepName);\r\n            return sheet.sheetId;\r\n        }\r\n        catch(e){\r\n            console.error('addNewSheet failed!', e.message);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    addStepToGraphSheet = async(stepName, rowCount) => {\r\n        const sheet = await this.doc.sheetsByTitle[this.sheetName];\r\n        if(rowCount === undefined) {\r\n            rowCount = (await sheet.getRows()).length || 0;\r\n            rowCount = Math.ceil(rowCount / ONE_STEP_ROW_COUNT) * ONE_STEP_ROW_COUNT;\r\n        }\r\n    \r\n        await sheet.loadCells(`A${rowCount + 2}:E${rowCount + ONE_STEP_ROW_COUNT +2}`);\r\n        let cell = await sheet.getCell(rowCount+1, 2);\r\n        Object.assign(cell, {value: `=ЕСЛИОШИБКА(FILTER('Шаг ${stepName}'!A2:A${ONE_STEP_ROW_COUNT}; 'Шаг ${stepName}'!A2:A${ONE_STEP_ROW_COUNT} <> \"adfgafdgdfg\"))`});   \r\n        cell = await sheet.getCell(rowCount+1, 3);\r\n        Object.assign(cell, {value: `=ЕСЛИОШИБКА(FILTER('Шаг ${stepName}'!B2:B${ONE_STEP_ROW_COUNT}; 'Шаг ${stepName}'!B2:B${ONE_STEP_ROW_COUNT} <> \"adfgafdgdfg\"))`});   \r\n        cell = await sheet.getCell(rowCount+1, 4);\r\n        Object.assign(cell, {value: `=ЕСЛИОШИБКА(FILTER('Шаг ${stepName}'!C2:C${ONE_STEP_ROW_COUNT}; 'Шаг ${stepName}'!C2:C${ONE_STEP_ROW_COUNT} <> \"adfgafdgdfg\"))`});   \r\n        for(let i = rowCount + 2; i < rowCount + ONE_STEP_ROW_COUNT + 2; i++){\r\n            let cell = await sheet.getCell(i-1, 0);\r\n            Object.assign(cell, {value: `=ЕСЛИ(ЕПУСТО(C${i});\"\";\"${stepName}\")`});    \r\n            cell = await sheet.getCell(i-1, 1);\r\n            Object.assign(cell, {value: `=ЕСЛИ(ЕПУСТО(C${i});\"\";ЕСЛИОШИБКА(FILTER('Шаг ${stepName}'!A$1; 'Шаг ${stepName}'!A$1 <> \"adfgafdgdfg\")))`}); \r\n        }\r\n        await sheet.saveUpdatedCells();\r\n    }\r\n}","import Rete from \"rete\";\r\nimport ReactRenderPlugin from \"rete-react-render-plugin\";\r\nimport ConnectionPlugin from \"rete-connection-plugin\";\r\nimport ContextMenuPlugin from \"rete-context-menu-plugin\";\r\nimport ConnectionPathPlugin from 'rete-connection-path-plugin';\r\nimport AreaPlugin from \"rete-area-plugin\";\r\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin';\r\nimport { StepNode } from \"./Nodes\";\r\nimport { TextControl, InvisibleControl, HrefControl, ButtonControl, stepSocket } from \"./Controls\";\r\nimport { Spreadsheet } from \"./spreadsheet.js\";\r\n\r\n\r\nconst ss = new Spreadsheet();\r\nglobal.ss = ss;\r\nlet loading = false;\r\n\r\n\r\nexport class StepComponent extends Rete.Component {\r\n  constructor(name, ssData) {\r\n    super(name);\r\n    this.ssData = ssData;\r\n  }\r\n\r\n  builder(node) {\r\n    node.addControl(new HrefControl(this.editor, \"href\", this.ssData.href)); \r\n    node.addControl(new TextControl(this.editor, \"question\", this.ssData.question.value || '')); \r\n    node.addControl(new InvisibleControl(this.editor, \"question_formula\", this.ssData.question.formula));\r\n    node.addControl(new ButtonControl(this.editor, \"addAnswer\", this.name)); \r\n    node.data = { \"question\": this.ssData.question };\r\n    let inp = new Rete.Input(\"step\", \"\", stepSocket, true);\r\n    stepSocket.combineWith(inp);\r\n    for(let i = 0; i < this.ssData.answers.length; i++){\r\n      try {\r\n        if((this.ssData.answers[i]) && (this.ssData.answers[i].includes('value'))) {\r\n          let obj = JSON.parse(this.ssData.answers[i]);\r\n          if ((!obj.value) && (!obj.formula)) continue;\r\n          let out = new Rete.Output(this.ssData.answers[i], this.ssData.answers[i], stepSocket, false);\r\n          node.addOutput(out);\r\n        }\r\n      }\r\n      catch(e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    \r\n\r\n    return node.addInput(inp)\r\n  }\r\n\r\n  worker(node, inputs, outputs) {\r\n    //console.log(node.data.greeting);\r\n  }\r\n}\r\n\r\nexport default async function(container, cafe) {\r\n  if (loading) return false;\r\n  loading = true;\r\n  try {\r\n    if(!cafe) return;\r\n    global.editorIsLoaded = false;\r\n    await ss.loadSSGraph(cafe.cafeId, cafe.ssBackId);\r\n\r\n    var editor = new Rete.NodeEditor(\"demo@0.1.0\", container);\r\n    global.editor = editor;\r\n    editor.use(ConnectionPlugin);\r\n    editor.use(ReactRenderPlugin, {\r\n      component: StepNode\r\n    });\r\n    editor.use(ContextMenuPlugin);\r\n    editor.use(ConnectionPathPlugin, {\r\n      curve: ConnectionPathPlugin.curveBumpY, // curve identifier (ConnectionPathPlugin.curveStepBefore)\r\n      //options: { vertical: true, curvature: 0.1 }, // optional ( vertical: false, curvature: 0.2)\r\n      arrow: { color: '#b1b1d4', marker: 'M2,-7 L2,7 L18,0 z' },\r\n      transformer: () => ([x1, y1, x2, y2]) => [\r\n        [x1, y1], \r\n        [x1+70, y1], \r\n        (y2-y1 < 50)? [(x1 + x2)/2, y2-50]:[x2, y2-50], \r\n        (y2-y1 < 50)? [x2, y2-50]: [x2, y2], \r\n        [x2, y2],\r\n      ],\r\n    });\r\n    editor.use(AutoArrangePlugin, { margin: {x: 10, y: 10 }, depth: 0 });\r\n\r\n    //editor.trigger('arrange', { node });\r\n    var engine = new Rete.Engine(\"demo@0.1.0\");\r\n    \r\n    for (let step in ss.graph) {\r\n      let component = new StepComponent(step, {        \r\n        question: ss.graph[step].question,\r\n        answers: ss.graph[step].answers,\r\n        href: ss.getSheetUrlByTittle('Шаг ' + step),\r\n      });\r\n      editor.register(component);\r\n    }\r\n    \r\n    editor.on(\r\n      \"process nodecreated noderemoved connectioncreated connectionremoved\",\r\n      async () => {\r\n        console.log(\"process\");\r\n        await engine.abort();\r\n        await engine.process(editor.toJSON());\r\n      }\r\n    );\r\n    editor.on('noderemoved', node => {\r\n      ss.remeberToDeleteStep(node.name);\r\n    });\r\n\r\n    await editor.fromJSON(await ss.toRete());\r\n\r\n    editor.view.resize();\r\n    AreaPlugin.zoomAt(editor);\r\n    global.editorIsLoaded = true;\r\n    loading = false;\r\n  }\r\n  catch(e) {\r\n    loading = false;\r\n    global.editorIsLoaded = true;\r\n    throw e;\r\n  }\r\n}\r\n"],"sourceRoot":""}