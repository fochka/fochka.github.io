{"version":3,"sources":["DBLib.js","Nodes.jsx","index.js","Controls.jsx","spreadsheet.js","editor.jsx"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","cookies","Cookies","getAllCafeInfo","_getAllCafeInfo","apply","arguments","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_callee","token","response","data","_context","get","prompt","setToken","fetch","process","concat","credentials","text","JSON","parse","t0","console","message","expires","Date","now","set","path","StepNode","_Node","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","output","formula","window","confirm","node","outputs","delete","stringify","update","_this","_this$props","props","bindSocket","bindControl","_this$state","controls","inputs","selected","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","map","input","rete_react_render_plugin__WEBPACK_IMPORTED_MODULE_6__","socket","io","innerRef","showControl","control","onClick","Node","global","editorIsLoaded","emptyAnswerStr","useState","React","useEffect","clickArrange","editor","alert","trigger","clickCreateStep","_ref","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","stepName","sheetId","step","getComponent","ss","addNewStepSheet","StepComponent","question","answers","href","getSheetUrlById","register","t1","createNode","t2","addNode","t3","App","addEventListener","event","preventDefault","_useState","_useState2","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","cafes","setCafes","_useState3","_useState4","options","setOptions","_useState5","_useState6","displayLoading","setDisplayLoading","_useState7","_useState8","displaySaving","setDisplaySaving","location","pathname","split","search","cafeId","_datesInit","_callee3","_context3","splice","cafeName","ssBackId","cafe","react__WEBPACK_IMPORTED_MODULE_2___default","datesInit","find","getCafeById","style","textAlign","action","onChange","target","width","height","saveRete","toJSON","e","generateGraphSheet","display","id","ref","el","init","res","includes","_unused3","rootElement","document","getElementById","ReactDOM","render","stepSocket","Socket","MyReactControl","_React$Component","_getPrototypeOf2","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_len","args","Array","_key","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","setState","putData","react__WEBPACK_IMPORTED_MODULE_6___default","readOnly","Component","InvisibleComponent","_React$Component2","_getPrototypeOf3","_this2","_len2","_key2","ButtonComponent","_React$Component3","_getPrototypeOf4","_this3","_len3","_key3","_this4","emitter","nodes","x","size","addOutput","Output","bind","HrefComponent","_React$Component4","_getPrototypeOf5","_this5","_len4","_key4","rel","HrefControl","_Control","_this6","component","Control","TextControl","_Control2","_this7","_arguments","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","InvisibleControl","_Control3","_this8","_arguments2","ButtonControl","_Control4","_this9","GoogleSpreadsheet","require","apiSheetKey","Spreadsheet","loadSSGraph","ssId","steps","allSheets","sheet","cell","nextSteps","j","_cell","answer","doc","useServiceAccountAuth","loadInfo","sheetsByIndex","title","startsWith","substring","trim","sheetsByTitle","loadCells","endColumnIndex","getCell","position","graph","log","_x","_x2","_spreadsheetUrl","getSheetUrlByTittle","tittle","remeberToDeleteStep","sheetsToDelete","toRete","_callee2","reteGraph","pos","idx","_step","_i","nodeIdx","nextNodeIdx","_context2","connections","findNodeIdxByStep","_unused2","loadPositions","_ref3","_x3","deleteSheets","_ref4","_callee4","stepsCount","graphSheet","rowCount","startIdx","_context4","sheetName","clearRows","start","end","_x4","_x5","_ref5","_callee5","ssStep","dest","_question","_context5","columnIdx","printArrayToSheet","_x6","_ref6","_callee6","oldSheetName","rowIdx","_context6","clear","addSheet","gridProperties","columnCount","assign","saveUpdatedCells","addStepToGraphSheet","_x7","_x8","_ref7","_callee7","array","_i2","_j","_cell2","_context7","_x9","_x10","_ref8","_callee8","needAddStepToGraphSheet","_context8","_x11","_ref9","_callee9","_cell3","_context9","getRows","Math","ceil","_x12","_x13","getQuestion","_ref10","_callee10","row","_context10","_x14","getAnswers","_ref11","_callee11","filteredButtonRows","_context11","filter","_x15","getTimes","_callee12","times","_context12","stepOfTime","loading","_Rete$Component","ssData","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","addControl","inp","Rete","Input","combineWith","out","addInput","container","engine","NodeEditor","use","ConnectionPlugin","ReactRenderPlugin","ContextMenuPlugin","ConnectionPathPlugin","curve","curveBumpY","arrow","color","marker","transformer","_ref2","x1","y1","x2","y2","AutoArrangePlugin","margin","y","depth","Engine","on","abort","fromJSON","view","resize","AreaPlugin","zoomAt","__webpack_exports__"],"mappings":"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","file":"static/js/main.d8b50a5b.chunk.js","sourcesContent":["import Cookies from 'universal-cookie';\r\nconst cookies = new Cookies();\r\n\r\nexport async function getAllCafeInfo() {\r\n    try {\r\n        let token = cookies.get('token');\r\n        if (!token) {\r\n            token = prompt('Токен для авторизации');\r\n            if (!token) return;\r\n            setToken(token);\r\n        }\r\n        const response = await fetch(process.env.REACT_APP_FEEDMER_URL+`/getAllCafeInfo/${token}`, {\r\n            credentials: 'include'\r\n        });\r\n        const data = await response.text();\r\n        return JSON.parse(data);\r\n    } catch (e) {\r\n        console.error(`getAllCafeInfo failed`, e.message || e);\r\n    }\r\n}\r\n\r\nexport function setToken(token) {\r\n    const expires =  new Date(Date.now() + 3*30*24*60*60*1000);\r\n    cookies.set('token', token, { path: '/', expires: expires });\r\n}","import React from \"react\";\r\nimport { Node, Socket, Control } from \"rete-react-render-plugin\";\r\n\r\nexport class StepNode extends Node {\r\n  \r\n  onClick(output) {\r\n    const name = JSON.parse(output.name);\r\n    if (name.formula) return;\r\n    name.value = prompt('',  name.value);\r\n    if (name.value === null) return\r\n    if (name.value === '') {\r\n      if(!window.confirm(`Удалить ответ ${output.name.value} на шаге ${output.node.name}?`)) return;\r\n      output.node.outputs.delete(output.key)\r\n    };\r\n    output.name = JSON.stringify(name);\r\n    output.node.update();\r\n  }\r\n\r\n  render() {\r\n    const { node, bindSocket, bindControl } = this.props;\r\n    const { outputs, controls, inputs, selected } = this.state;\r\n\r\n    return (\r\n      <div className={`node ${selected}`}>\r\n        {/* Inputs */}\r\n        {inputs.map(input => (\r\n          <div className=\"input\" key={input.key}>\r\n            <Socket\r\n              type=\"input\"\r\n              socket={input.socket}\r\n              io={input}\r\n              innerRef={bindSocket}\r\n            />\r\n            {!input.showControl() && (\r\n              <div className=\"input-title\">{input.name}</div>\r\n            )}\r\n            {input.showControl() && (\r\n              <Control\r\n                className=\"input-control\"\r\n                control={input.control}\r\n                innerRef={bindControl}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n        <div className=\"title\">{node.name}</div>\r\n        {/* Controls */}\r\n        {controls.map(control => (\r\n          <Control\r\n            className=\"control\"\r\n            key={control.key}\r\n            control={control}\r\n            innerRef={bindControl}\r\n          />\r\n        ))}\r\n        {/* Outputs */}\r\n        {outputs.map(output => (\r\n          <div className=\"output\" key={output.key}>\r\n            <div className=\"output-title\" onClick={() => this.onClick(output)} >{\r\n              JSON.parse(output.name).value || ''/*.value*/\r\n            }</div>\r\n            <Socket\r\n              type=\"output\"\r\n              socket={output.socket}\r\n              io={output}\r\n              innerRef={bindSocket}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport init, {StepComponent} from \"./editor\";\r\nimport { getAllCafeInfo, setToken } from \"./DBLib.js\";\r\nimport \"./styles.css\"; \r\nimport { Spreadsheet } from \"./spreadsheet.js\";\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nglobal.editorIsLoaded = false;\r\nglobal.emptyAnswerStr = ' — ';\r\nconst {useState, useEffect} = React;\r\nconst clickArrange = () => {\r\n  if(!(global.editor)) return alert('Редактор занят');\r\n  global.editor.trigger('arrange', 10);\r\n}\r\n\r\nconst clickCreateStep = async () => {\r\n  if(!(global.editorIsLoaded)) return alert('Редактор занят');\r\n  const stepName = prompt('Название шага');\r\n  if(!stepName) return; \r\n  try {\r\n    if (global.editor.getComponent(stepName)) return alert('Шаг с таким именем уже зарегистрирован');\r\n  } catch{}\r\n  try {\r\n    const sheetId = await global.ss.addNewStepSheet(stepName);\r\n    if(!sheetId) throw new Error('No sheetId');\r\n    const step = new StepComponent(stepName, {        \r\n      question: {value: 'question'},\r\n      answers: [ JSON.stringify({value: 'answer'}) ],\r\n      href: global.ss.getSheetUrlById(sheetId),\r\n    }); \r\n    global.editor.register(step);\r\n    global.editor.addNode(await step.createNode());\r\n  }\r\n  catch{\r\n    return alert('Не удалось создать лист \"Шаг ' + stepName + '\" в гугл таблице. Возможно такой шаг уже создан');\r\n  }\r\n}\r\n\r\nconst clickImport = async () => {\r\n  if(!(global.editorIsLoaded)) return alert('Редактор занят');\r\n  const ss = new Spreadsheet();\r\n  await ss.loadSSGraph(-1, prompt('ID гугл-таблицы:'));\r\n  let graph1 = await ss.toRete();\r\n  let graph2 = await global.editor.toJSON();\r\n  const firstId = Object.keys(graph2.nodes).length;\r\n  for(let i = 0; i < Object.keys(graph1.nodes).length; i++){\r\n    graph1.nodes[i].id = firstId + i;\r\n    graph1.nodes[firstId + i] = graph1.nodes[i];\r\n\r\n    await global.ss.addStepToGraphSheet(graph1.nodes[i].name);\r\n    \r\n    let step = new StepComponent(graph1.nodes[i].name, {        \r\n      question: '',\r\n      answers: [],\r\n      href: '',\r\n    }); \r\n    global.editor.register(step);\r\n    delete graph1.nodes[i];\r\n  } \r\n  graph2.nodes = Object.assign({}, graph2.nodes, graph1.nodes);\r\n  global.editor.fromJSON(graph2);\r\n  \r\n  for(let node in graph1.nodes){\r\n    let ssStep = graph1.nodes[node].name;\r\n    await global.ss.addStepToGraphSheet(ssStep);\r\n  }\r\n  /*\r\n    >>>>> TO-DO: Протестить эту функцию\r\n    + загружать инфу о наличии формулы в кнопках\r\n  */\r\n\r\n}\r\n\r\nfunction getCafeById(cafeId, cafes){\r\n  if(!cafeId) return false;\r\n  const cafe = cafes.find(val => val.cafeId === cafeId);\r\n  return (cafe)? cafe : false;\r\n}\r\n\r\n\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    const handleWindowBeforeUnload = event => {\r\n      if (!(global.editorIsLoaded)) {\r\n        event.preventDefault();\r\n        alert('Ну видишь же, загружается'); // <<<<<< Не работает!\r\n      }\r\n    };\r\n    window.addEventListener('beforeunload', handleWindowBeforeUnload);\r\n  }, []);\r\n  \r\n  function clickChangeCafe() {\r\n    if(!(global.editorIsLoaded)) return alert('Редактор занят');\r\n    window.location.search = '';\r\n    setCafes();\r\n  }\r\n\r\n  function clickSave() {\r\n    if(!(global.editorIsLoaded)) return alert('Редактор занят');\r\n    try{\r\n      global.editorIsLoaded = false;\r\n      setDisplaySaving('block');\r\n      global.ss.saveRete(global.editor.toJSON()).then(\r\n        result => { setDisplaySaving('none'); global.editorIsLoaded = true; return alert('Сценарий сохранен'); },\r\n        error => { setDisplaySaving('none'); global.editorIsLoaded = true; return alert('Сценарий не сохранен'); }\r\n      );\r\n    }\r\n    catch(e){\r\n      setDisplaySaving('none'); \r\n      global.editorIsLoaded = true;\r\n      return alert('Сценарий не сохранен, ошибка ' + e.message)\r\n    }\r\n  };\r\n\r\n  function generateGraphSheet() {\r\n    if(!(global.editorIsLoaded)) return alert('Редактор занят');\r\n    if(!window.confirm('Граф буден сохранен в лист \"Граф (сгенерированный)\". Если такой лист уже существует, он будет перезаписан. Продолжить?')) return;\r\n    global.editorIsLoaded = false;\r\n    try{\r\n      global.ss.generateGraphSheet('Граф (сгенерированный)', global.editor.toJSON()).then(\r\n        result => { global.editorIsLoaded = true; return alert('Лист графа успешно создан'); },\r\n        error => { global.editorIsLoaded = true; return alert('Не удалость создать лист графа'); }\r\n      );\r\n    }\r\n    catch(e){\r\n      global.editorIsLoaded = true;\r\n      return alert('Сценарий не сохранен, ошибка ' + e.message)\r\n    }\r\n  };\r\n\r\n  const [cafes, setCafes] = useState('');\r\n  const [options, setOptions] = useState('');\r\n  const [displayLoading, setDisplayLoading] = useState('block');\r\n  const [displaySaving, setDisplaySaving] = useState('none');\r\n\r\n  let path = window.location.pathname;\r\n  path = path.split('/');\r\n  if ((path.length > 2) && path[1] === 'set-token') {\r\n    setToken(path[2]);\r\n    window.location.pathname = '';\r\n  }\r\n\r\n  let search = window.location.search;\r\n  search = search.split('=');\r\n  const cafeId = ((search.length>0)||(search[0] === '?cafeid'))? search[1] : false;\r\n  \r\n  useEffect(() => {\r\n    async function datesInit() {\r\n      const data = (await getAllCafeInfo()) || [];\r\n      if(cookies.get('tempGraph')) {\r\n        data.splice(0, 0, {\r\n            cafeId: 'tempGraphCached',\r\n            cafeName: 'Новый граф',\r\n            ssBackId: cookies.get('tempGraph'),\r\n        });\r\n      }\r\n      data.push({\r\n          cafeId: 'tempGraph',\r\n          cafeName: 'Другой граф',\r\n      });\r\n      setCafes(data);      \r\n      setOptions(data.map((cafe) => {\r\n        return <option value={cafe.cafeId} key={cafe.cafeId}>{cafe.cafeName}</option>;\r\n      }));\r\n      //setDropDown(createDropDown(cafes));\r\n    }    \r\n    datesInit();\r\n  }, []);\r\n\r\n  if(!cafes)\r\n    return 'Получаем информацию о кафе от ' + process.env.REACT_APP_FEEDMER_URL+`/getAllCafeInfo....`;\r\n  let cafe = getCafeById(cafeId, cafes);\r\n  if((cafe) && (!cafe.ssBackId)) {\r\n    cafe.ssBackId = prompt('ID гугл-таблицы:');\r\n    if(cafe.ssBackId) {\r\n      cookies.set(cafe.cafeId, cafe.ssBackId, { path: '/' });\r\n      window.location.search = '?cafeId=tempGraphCached';\r\n      return;\r\n    }\r\n    else cafe = null;\r\n  }   \r\n  if(cafe){ \r\n    try {\r\n      return (\r\n        <div className=\"App\">\r\n          <div style={{ textAlign: \"left\", width: \"100vw\", height: \"100vh\" }}>\r\n            <div className='header'>\r\n              <input type='button' value=\"Сохранить\" className='menu_button' onClick={clickSave} />\r\n              <input type='button' value=\"Выбор кафе\" className='menu_button' onClick={clickChangeCafe} />\r\n              {//<input type='button' value=\"Импорт\" class='menu_button' onClick={clickImport} />\r\n              }\r\n              <input type='button' value=\"Автоперестановка\" className='menu_button' onClick={clickArrange} />\r\n              <input type='button' value=\"Создать лист графа\" className='menu_button' onClick={generateGraphSheet} />\r\n              <input type='button' value=\"Создать шаг\" className='step_button' onClick={clickCreateStep} />\r\n              <b>{cafe.cafeName}</b>\r\n            </div>\r\n            <div  style={{display: displayLoading}}>\r\n              <h1> Загружаем... </h1>\r\n            </div>\r\n            <div  style={{display: displaySaving}}>\r\n              <h1> Сохраняем... </h1>\r\n            </div>\r\n            <div id='canvas' ref={el => (init(el, cafe))\r\n              .then((res) => { if (res !== false) setDisplayLoading('none') } )\r\n              .catch(e => {\r\n                try {\r\n                  if(!e.message.includes('style')) throw e;//setDisplayLoading('block');\r\n                  //else throw e;\r\n                } catch { \r\n                  alert('Не удалось загрузить граф ' +e);\r\n                  console.error(e);\r\n                  setDisplayLoading('none')\r\n                }\r\n                }) \r\n              } />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    catch(e) {\r\n      return alert('Не удалось отобразить выбранный граф');\r\n    }\r\n  }\r\n  else{\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>FeedMer chatbot constructor</h1>\r\n        <div style={{ textAlign: \"left\" }}>\r\n          <form action=\"\" method=\"GET\">\r\n            <label>\r\n            Выберите кафе:\r\n            <select value={cafes} name='cafeid' onChange={(event) => setCafes(event.target.value)}>\r\n                {options}\r\n            </select>\r\n            </label>\r\n            <input type=\"submit\" value=\"Выбрать\" className='menu_button' />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n","import React from \"react\";\r\nimport { Control, Output, Socket} from \"rete\";\r\n\r\nvar stepSocket = new Socket(\"Соединить с другим шагом\");\r\n\r\nclass MyReactControl extends React.Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.name\r\n    });\r\n    //console.log(this.props);\r\n    this.props.putData(this.props.id, this.props.name);\r\n  }\r\n  onChange(event) {\r\n    this.props.putData(this.props.id, event.target.value);\r\n    //this.props.emitter.trigger(\"process\");\r\n    this.setState({\r\n      name: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //<textarea readOnly>{this.state.name}</textarea>\r\n      <input value={this.state.name} readOnly/* onChange={this.onChange.bind(this)}*/ />\r\n    );\r\n  }\r\n}\r\n\r\nclass InvisibleComponent extends React.Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.name\r\n    });\r\n    this.props.putData(this.props.id, this.props.name);\r\n  }\r\n  onChange(event) {\r\n    this.props.putData(this.props.id, event.target.value);\r\n    this.setState({\r\n      name: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (<b/>);\r\n  }\r\n}\r\n\r\nclass ButtonComponent extends React.Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.name\r\n    });\r\n  }\r\n  onClick(event) {\r\n    const node = this.props.emitter.nodes.find(x => {return this.props.name === x.name})\r\n    const text = JSON.stringify({ value: 'answer' + (node.outputs.size + 1)});\r\n    if(node){\r\n      node.addOutput(\r\n        new Output(text, text, stepSocket, false)\r\n      );\r\n      node.update();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"right_div\">\r\n        <button type=\"button\" className=\"node_submit\" onClick={this.onClick.bind(this)}>+</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass HrefComponent extends React.Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.name\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <a href={this.state.name} target=\"_blank\" rel=\"noopener noreferrer\">\"Перейти к таблице\"</a>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport class HrefControl extends Control {\r\n  constructor(emitter, key, name) {\r\n    super(key);\r\n    this.render = \"react\";\r\n    this.component = HrefComponent;\r\n    this.props = {\r\n      emitter,\r\n      id: key,\r\n      name,\r\n      //putData: () => this.putData.apply(this, arguments)\r\n    };\r\n  }\r\n}\r\n\r\nexport class TextControl extends Control {\r\n  constructor(emitter, key, name) {\r\n    super(key);\r\n    this.render = \"react\";\r\n    this.component = MyReactControl;\r\n    this.props = {\r\n      emitter,\r\n      id: key,\r\n      name,\r\n      putData: () => this.putData.apply(this, arguments)\r\n    };\r\n  }\r\n}\r\n\r\nexport class InvisibleControl extends Control {\r\n  constructor(emitter, key, name) {\r\n    super(key);\r\n    this.render = \"react\";\r\n    this.component = InvisibleComponent;\r\n    this.props = {\r\n      emitter,\r\n      id: key,\r\n      name,\r\n      putData: () => this.putData.apply(this, arguments)\r\n    };\r\n  }\r\n}\r\n\r\nexport class ButtonControl extends Control {\r\n  constructor(emitter, key, name) {\r\n    super(key);\r\n    this.render = \"react\";\r\n    this.component = ButtonComponent;\r\n    this.props = {\r\n      emitter,\r\n      id: key,\r\n      name,\r\n      //putData: () => this.putData.apply(this, arguments)\r\n    };\r\n  }\r\n}\r\n\r\nexport { stepSocket };\r\n","//import { useState } from \"react\";\r\nconst POS_COLUMN_IDX = 23;\r\nconst oneStepRowCount = 30; // Не менять\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\nconst apiSheetKey = require('./client_secret_google_sheets.json');\r\n        //const [error, setError] = useState(Error());\r\n\r\nexport class Spreadsheet {\r\n    constructor(){\r\n        this.graph = null;\r\n        this.sheetName =  'Граф';\r\n        this.sheetsToDelete = [];\r\n    }\r\n    loadSSGraph = async (cafeId, ssId) => {        \r\n        try{\r\n            if(ssId === this.ssId)\r\n                return;\r\n            this.cafeId = cafeId;\r\n            this.ssId = ssId;\r\n            this.doc = new GoogleSpreadsheet(this.ssId);\r\n            await this.doc.useServiceAccountAuth(apiSheetKey);\r\n            await this.doc.loadInfo();\r\n            let steps = {};\r\n            const allSheets = this.doc.sheetsByIndex;\r\n            for (let i = 0; i < allSheets.length; i++) {\r\n                if (!(allSheets[i].title.startsWith('Шаг'))) continue;\r\n                // Add formuls to question and answers        \r\n                let stepName = allSheets[i].title.substring(3).trim();\r\n                if((stepName) && (!Object.keys(steps).includes(stepName))){\r\n                    let sheet = this.doc.sheetsByTitle['Шаг ' + stepName];\r\n                    if (sheet) {\r\n                        await sheet.loadCells({ endColumnIndex: 3 });\r\n                        let cell = sheet.getCell(0, 0);\r\n                        let question = { value: cell.value, formula: cell.formula };\r\n\r\n                        let answers = [];\r\n                        let nextSteps = [];\r\n                        for (let j = 1; j < oneStepRowCount; j++) {\r\n                            let cell = sheet.getCell(j, 0);\r\n                            if ((cell.value) || (cell.formula)) {\r\n                                let answer = JSON.stringify({ value: cell.value, formula: cell.formula })\r\n                                if (answers.includes(answer)) continue;\r\n                                answers.push(answer);\r\n                                cell = sheet.getCell(j, 1);\r\n                                nextSteps.push(JSON.stringify({ value: cell.value, formula: cell.formula }));\r\n                            }\r\n                        }\r\n                        await sheet.loadCells('A1:Z1');\r\n                        cell = sheet.getCell(0, POS_COLUMN_IDX);\r\n                        steps[stepName] = {\r\n                            question: question,\r\n                            answers: answers,\r\n                            nextSteps: nextSteps,\r\n                            position: JSON.parse(cell.value) || null,\r\n                        };\r\n                    }\r\n                    /*else {\r\n                        let question = { value: res[i].question };\r\n                        let answers = res.filter( x => x.step === stepName );\r\n                        answers.forEach(x => { x.answer = JSON.stringify({ value: x.answer }) });\r\n                        let nextSteps = res.filter( x => x.step === stepName );\r\n                        //nextSteps.forEach(x => { x.nextStep = JSON.stringify({ value: x.nextStep }) });\r\n                        steps[stepName] = {\r\n                            question: question,\r\n                            answers: answers,\r\n                            nextSteps: nextSteps,\r\n                            position: null,\r\n                        };\r\n                    }*/\r\n                }\r\n            }\r\n            this.graph = steps;\r\n\r\n            console.log('Graph are loaded');\r\n            return true;\r\n        }\r\n        catch(e){\r\n            //setError(e);\r\n            console.error(`Cannot load graph from goodle with ssId = ${this.ssId}`, Error(e.message || e));\r\n            throw e; \r\n        }\r\n    }\r\n\r\n    getSheetUrlById = (sheetId) => {\r\n        return this.doc._spreadsheetUrl + '#gid=' + sheetId;\r\n    }\r\n\r\n    getSheetUrlByTittle = (tittle) => {\r\n        const sheet = this.doc.sheetsByTitle[tittle];\r\n        const url = (sheet)? this.getSheetUrlById(sheet.sheetId) : null;\r\n        return url;\r\n    }\r\n\r\n    remeberToDeleteStep = (stepName) => {                \r\n        this.sheetsToDelete.push(stepName);\r\n    }\r\n\r\n    toRete = async() => {\r\n        let reteGraph = {\r\n            id: `demo@0.1.0`,//`cafe${this.cafeId}`,\r\n            nodes: {}\r\n        }\r\n        let pos = -800;\r\n        let idx = 0;\r\n        for (let step in this.graph) {\r\n            try{\r\n                let answers = this.graph[step].answers;\r\n                let outputs = {};\r\n                for(let i = 0; i < answers.length; i++){\r\n                    if(answers[i])\r\n                        outputs[answers[i]] = { connections: [] }\r\n                }\r\n                reteGraph.nodes[idx] = {\r\n                    id: idx,\r\n                    data: {},\r\n                    inputs: { \"step\": { connections: [] } },\r\n                    name: step,\r\n                    outputs: outputs,\r\n                    position: this.graph[step].position || [pos+=300, -100],\r\n                }\r\n                idx++;\r\n            }\r\n            catch(e){}\r\n        }\r\n\r\n        //Connections\r\n        for (let step in this.graph) {\r\n            for (let i = 0; i < this.graph[step].nextSteps.length; i++) {\r\n                try{\r\n                    //if(this.graph[i].answer == 'Назад') continue;\r\n                    let nodeIdx = this.findNodeIdxByStep(reteGraph, step);\r\n                    let nextNodeIdx = this.findNodeIdxByStep(reteGraph, JSON.parse(this.graph[step].nextSteps[i]).value);\r\n                    if((nextNodeIdx === false)||(nodeIdx === false)||(nextNodeIdx === undefined)||(nodeIdx === undefined)) continue;\r\n                    reteGraph.nodes[nodeIdx].outputs[this.graph[step].answers[i]] = {  \r\n                        connections: [ \r\n                            {\r\n                                node: nextNodeIdx,\r\n                                input: 'step',\r\n                                data: {}\r\n                            } \r\n                        ] \r\n                    }\r\n                    reteGraph.nodes[nextNodeIdx].inputs['step'].connections.push({\r\n                        node: nodeIdx,\r\n                        output: this.graph[step].answers[i],\r\n                        data: {},\r\n                    } )\r\n                }\r\n                catch{\r\n                    try{\r\n                        console.error(`load connection failed between steps \"${step}\" and \"${JSON.parse(this.graph[step].nextSteps[i]).value}\"`)\r\n                    }catch{}\r\n                }\r\n            }\r\n        }\r\n\r\n        return reteGraph;\r\n    }\r\n    \r\n    loadPositions = async (stepName) => {     \r\n        //{valueRenderOption: 'FORMULA'}   \r\n        try{\r\n            const sheet = await this.doc.sheetsByTitle['Шаг ' + stepName];\r\n            if(!sheet) return;\r\n            await sheet.loadCells('A1:Z1');\r\n            let cell = sheet.getCell(0, POS_COLUMN_IDX);\r\n            return JSON.parse(cell.value)\r\n        }\r\n        catch(e){\r\n            console.error(`Cannot load coordinates for step = ${stepName}`, Error(e.message || e));\r\n        }\r\n    }\r\n\r\n    findNodeIdxByStep = (reteGraph, step) => {\r\n        for(let node in reteGraph.nodes){\r\n            if(reteGraph.nodes[node].name === step)\r\n                return node;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    deleteSheets = async(sheetsToDelete, stepsCount) => {\r\n        if(!sheetsToDelete || !this.sheetName || (sheetsToDelete.length < 1)) return;\r\n        const graphSheet = await this.doc.sheetsByTitle[this.sheetName];\r\n        const rowCount = (sheetsToDelete.length + stepsCount) * oneStepRowCount + 1;\r\n        await graphSheet.loadCells('A1:A' + rowCount);\r\n        for(let i = 0; i < sheetsToDelete.length; i++){        \r\n            const sheet = this.doc.sheetsByTitle['Шаг ' + sheetsToDelete[i]];\r\n            if(sheet) await sheet.delete();\r\n            //sheet.clearRows\r\n            let startIdx = -1;\r\n            //let endIdx = -1;\r\n            for(let j = 1; j < rowCount; j++){\r\n                let cell = graphSheet.getCell(j, 0);\r\n                if(cell.value === sheetsToDelete[i]) {\r\n                    if(startIdx<0) startIdx = j;\r\n                    //endIdx = j;\r\n                }\r\n            }\r\n            await graphSheet.clearRows({start: startIdx+1, end: startIdx+oneStepRowCount});  \r\n        }\r\n        this.sheetsToDelete = [];        \r\n    }\r\n\r\n    saveRete = async(reteGraph) => {\r\n        await this.deleteSheets(this.sheetsToDelete, Object.keys(reteGraph.nodes).length);\r\n        for(let node in reteGraph.nodes){            \r\n            let question = (reteGraph.nodes[node].data.question.formula) ? reteGraph.nodes[node].data.question.formula : reteGraph.nodes[node].data.question.value;\r\n            let ssStep = [\r\n                //[reteGraph.nodes[node].name],\r\n                [\r\n                    {value: question },\r\n                    {value: JSON.stringify(reteGraph.nodes[node].position), columnIdx: POS_COLUMN_IDX},\r\n                ],\r\n            ]\r\n            for(let output in reteGraph.nodes[node].outputs){\r\n                try{\r\n                    let dest;\r\n                    if(reteGraph.nodes[node].outputs[output].connections.length < 1)\r\n                        dest = { name: \"\", data: { question: \"\" }};\r\n                    else\r\n                        dest = reteGraph.nodes[reteGraph.nodes[node].outputs[output].connections[0].node];\r\n                    let answer = JSON.parse(output);\r\n                    answer = (answer.formula) ? answer.formula : answer.value;\r\n                    let question = (dest.data.question.formula) ? dest.data.question.formula : dest.data.question.value;\r\n                    ssStep.push([\r\n                        {value: answer},\r\n                        {value: dest.name},\r\n                        {value: question},\r\n                    ]);\r\n                    /*ssGraph.push({\r\n                        step: reteGraph.nodes[node].name,\r\n                        question: reteGraph.nodes[node].data.question,\r\n                        answer: output,\r\n                        nextStep: dest.name,\r\n                        nextQuestion: dest.data.question,\r\n                    })*/\r\n                }\r\n                catch{}\r\n            }\r\n            await this.printArrayToSheet(ssStep, \"Шаг \" + reteGraph.nodes[node].name);\r\n        }\r\n        //await this.printArrayToSheet(ssGraph, \"Граф (собранный)\");\r\n    }\r\n\r\n    generateGraphSheet = async(sheetName, reteGraph) => {\r\n        try {\r\n            const oldSheetName = this.sheetName;\r\n            this.sheetName = sheetName;\r\n        \r\n            let sheet;\r\n            if(this.doc.sheetsByTitle[sheetName]) {\r\n                sheet = this.doc.sheetsByTitle[sheetName];\r\n                sheet.clear();\r\n            } else {\r\n                sheet = await this.doc.addSheet({\r\n                    \"title\": sheetName,\r\n                    \"gridProperties\": {\r\n                        \"rowCount\": 6000,\r\n                        \"columnCount\": 30\r\n                    }\r\n                });\r\n            }\r\n            await sheet.loadCells('A1:E1');\r\n            let cell = await sheet.getCell(0, 0);\r\n            Object.assign(cell, { value: 'step' } ); \r\n            cell = await sheet.getCell(0, 1);\r\n            Object.assign(cell, { value: 'question' } );\r\n            cell = await sheet.getCell(0, 2);\r\n            Object.assign(cell, { value: 'answer' } );\r\n            cell = await sheet.getCell(0, 3);\r\n            Object.assign(cell, { value: 'nextStep' } );\r\n            cell = await sheet.getCell(0, 4);\r\n            Object.assign(cell, { value: 'nextQuestion' } );\r\n            await sheet.saveUpdatedCells();\r\n\r\n            let rowIdx = 0;\r\n            for(let node in reteGraph.nodes){\r\n                let ssStep = reteGraph.nodes[node].name;\r\n                await this.addStepToGraphSheet(ssStep, rowIdx);\r\n                rowIdx += oneStepRowCount;\r\n            }\r\n            this.sheetName = oldSheetName;\r\n        }\r\n        catch (e) {\r\n            console.error('generateGraphSheet failed!', e);\r\n            throw e;\r\n\r\n        }\r\n    }\r\n\r\n    printArrayToSheet = async(array, sheetName) => {\r\n        try {\r\n            let sheet;\r\n            /*const doc = new GoogleSpreadsheet(this.ssId);\r\n            await doc.useServiceAccountAuth(apiSheetKey);\r\n            await doc.loadInfo();*/\r\n    \r\n            if(this.doc.sheetsByTitle[sheetName]) {\r\n                sheet = this.doc.sheetsByTitle[sheetName];\r\n            } else {\r\n                sheet = await this.doc.addSheet({\r\n                    \"title\": sheetName,\r\n                    \"gridProperties\": {\r\n                        \"rowCount\": oneStepRowCount,\r\n                        \"columnCount\": 30\r\n                    }\r\n                });\r\n            }\r\n    \r\n            await sheet.loadCells(['A1:Z1', 'A1:C'+array.length]);\r\n\r\n            if (array.length === 0) {\r\n                let initCell= await sheet.getCell(0,0);\r\n                initCell.value = \"Нет данных\";\r\n            }\r\n    \r\n            for (let i=0; i<array.length; i++) {\r\n                if(array[i] === undefined || array[i] === null) continue;\r\n                for(let j=0; j<=array[i].length; j++)  {\r\n                    if(!array[i][j] || !(array[i][j].value)) continue;\r\n                    let cell = await sheet.getCell(i, array[i][j].columnIdx || j);\r\n                    Object.assign(cell, array[i][j]);    \r\n                }\r\n            }\r\n            for (let i=array.length; i < sheet.rowCount; i++) {\r\n                for(let j=0; j<3; j++) {\r\n                    let cell = await sheet.getCell(i, j);\r\n                    Object.assign(cell, '');    \r\n                }\r\n            }\r\n            await sheet.saveUpdatedCells();\r\n        } catch (e) { \r\n            console.error(`printing to spreadsheet (id: ${this.ssId}) is failed`, e.message);\r\n            throw e; \r\n        }\r\n    }\r\n\r\n    addNewStepSheet = async(stepName) => {   \r\n        try{           \r\n            let sheet;\r\n            let needAddStepToGraphSheet = false;\r\n            if(this.doc.sheetsByTitle['Шаг ' + stepName]) {\r\n                sheet = this.doc.sheetsByTitle['Шаг ' + stepName];\r\n                sheet.clear();\r\n            }\r\n            else {\r\n                needAddStepToGraphSheet = true;\r\n                 sheet = await this.doc.addSheet({\r\n                    \"title\": 'Шаг ' + stepName,\r\n                    \"gridProperties\": {\r\n                        \"rowCount\": oneStepRowCount,\r\n                        \"columnCount\": 30\r\n                    }\r\n                });\r\n            }\r\n            const array = [\r\n                [{value: \"question\"}],\r\n                [{value: \"answer1\"}, {value: \"nextStep1\"}, {value: \"nextQuestion1\"}],\r\n\r\n            ]\r\n            await this.printArrayToSheet(array, 'Шаг ' + stepName);\r\n            if (needAddStepToGraphSheet) await this.addStepToGraphSheet(stepName);\r\n            return sheet.sheetId;\r\n        }\r\n        catch(e){\r\n            console.error('addNewSheet failed!', e.message);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    addStepToGraphSheet = async(stepName, rowCount) => {\r\n        const sheet = await this.doc.sheetsByTitle[this.sheetName];\r\n        if(rowCount === undefined) {\r\n            rowCount = (await sheet.getRows()).length || 0;\r\n            rowCount = Math.ceil(rowCount / oneStepRowCount) * oneStepRowCount;\r\n        }\r\n    \r\n        await sheet.loadCells(`A${rowCount + 2}:E${rowCount + oneStepRowCount +2}`);\r\n        let cell = await sheet.getCell(rowCount+1, 2);\r\n        Object.assign(cell, {value: `=ЕСЛИОШИБКА(FILTER('Шаг ${stepName}'!A2:A${oneStepRowCount}; 'Шаг ${stepName}'!A2:A${oneStepRowCount} <> \"adfgafdgdfg\"))`});   \r\n        cell = await sheet.getCell(rowCount+1, 3);\r\n        Object.assign(cell, {value: `=ЕСЛИОШИБКА(FILTER('Шаг ${stepName}'!B2:B${oneStepRowCount}; 'Шаг ${stepName}'!B2:B${oneStepRowCount} <> \"adfgafdgdfg\"))`});   \r\n        cell = await sheet.getCell(rowCount+1, 4);\r\n        Object.assign(cell, {value: `=ЕСЛИОШИБКА(FILTER('Шаг ${stepName}'!C2:C${oneStepRowCount}; 'Шаг ${stepName}'!C2:C${oneStepRowCount} <> \"adfgafdgdfg\"))`});   \r\n        for(let i = rowCount + 2; i < rowCount + oneStepRowCount + 2; i++){\r\n            let cell = await sheet.getCell(i-1, 0);\r\n            Object.assign(cell, {value: `=ЕСЛИ(ЕПУСТО(C${i});\"\";\"${stepName}\")`});    \r\n            cell = await sheet.getCell(i-1, 1);\r\n            Object.assign(cell, {value: `=ЕСЛИ(ЕПУСТО(C${i});\"\";ЕСЛИОШИБКА(FILTER('Шаг ${stepName}'!A$1; 'Шаг ${stepName}'!A$1 <> \"adfgafdgdfg\")))`}); \r\n        }\r\n        await sheet.saveUpdatedCells();\r\n    }\r\n    \r\n\r\n    getQuestion = async(step) => { //change to UserId\r\n        try{\r\n            if(!this.graph) throw Error('Graph is not loaded')\r\n            let row = this.graph.find(x => x.step === step);\r\n            return row.question;\r\n        } catch (e){\r\n            console.error(`Cannot get question for step ${step}`, e.message || e);\r\n        }\r\n    }\r\n    getAnswers = async(step) => {\r\n        try{\r\n            if(!this.graph) throw Error('Graph is not loaded')\r\n            let answers = this.graph.filter(x => x.step === step/* && x.answer !== \"anyText\"*/)\r\n            let filteredButtonRows = [];\r\n            answers.forEach(x => { if (!filteredButtonRows.includes(x.answer)) filteredButtonRows.push(x.answer) } );\r\n            return filteredButtonRows;\r\n        } catch (e){\r\n            console.error(`Cannot get buttons for step ${step}`, e.message || e);\r\n            return [];\r\n        }\r\n    }\r\n\r\n    getTimes = async () => {\r\n        try{\r\n            if(!this.graph) throw Error('Graph is not loaded')\r\n            let filteredButtonRows = this.graph.filter(x => x.step === global.stepOfTime && x.answer !== \"anyText\");\r\n            let times = [];\r\n            filteredButtonRows.forEach(x => times.push(x.answer));\r\n            //times = times.filter(x => isTimeButton(x));\r\n            return times;\r\n        } catch (e){\r\n            console.error(`Cannot get times`, e.message || e);\r\n            return [];\r\n        }\r\n    }\r\n}","import Rete from \"rete\";\r\nimport ReactRenderPlugin from \"rete-react-render-plugin\";\r\nimport ConnectionPlugin from \"rete-connection-plugin\";\r\nimport ContextMenuPlugin from \"rete-context-menu-plugin\";\r\nimport ConnectionPathPlugin from 'rete-connection-path-plugin';\r\nimport AreaPlugin from \"rete-area-plugin\";\r\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin';\r\nimport { StepNode } from \"./Nodes\";\r\nimport { TextControl, InvisibleControl, HrefControl, ButtonControl, stepSocket } from \"./Controls\";\r\nimport { Spreadsheet } from \"./spreadsheet.js\";\r\n\r\n\r\nconst ss = new Spreadsheet();\r\nglobal.ss = ss;\r\nlet loading = false;\r\n\r\n\r\nexport class StepComponent extends Rete.Component {\r\n  constructor(name, ssData) {\r\n    super(name);\r\n    this.ssData = ssData;\r\n  }\r\n\r\n  builder(node) {\r\n    node.addControl(new HrefControl(this.editor, \"href\", this.ssData.href)); \r\n    node.addControl(new TextControl(this.editor, \"question\", this.ssData.question.value || '')); \r\n    node.addControl(new InvisibleControl(this.editor, \"question_formula\", this.ssData.question.formula));\r\n    node.addControl(new ButtonControl(this.editor, \"addAnswer\", this.name)); \r\n    node.data = { \"question\": this.ssData.question };\r\n    let inp = new Rete.Input(\"step\", \"\", stepSocket, true);\r\n    stepSocket.combineWith(inp);\r\n    for(let i = 0; i < this.ssData.answers.length; i++){\r\n      try {\r\n        if((this.ssData.answers[i]) && (this.ssData.answers[i].includes('value'))) {\r\n          let obj = JSON.parse(this.ssData.answers[i]);\r\n          if ((!obj.value) && (!obj.formula)) continue;\r\n          let out = new Rete.Output(this.ssData.answers[i], this.ssData.answers[i], stepSocket, false);\r\n          node.addOutput(out);\r\n        }\r\n      }\r\n      catch(e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    \r\n\r\n    return node.addInput(inp)\r\n  }\r\n\r\n  worker(node, inputs, outputs) {\r\n    //console.log(node.data.greeting);\r\n  }\r\n}\r\n\r\nexport default async function(container, cafe) {\r\n  if (loading) return false;\r\n  loading = true;\r\n  try {\r\n    if(!cafe) return;\r\n    global.editorIsLoaded = false;\r\n    /*const cafes = await cafePromise;\r\n    let cafe;\r\n    if(cafeId)\r\n      cafe = cafes.find(val=>  val.cafeId === cafeId);\r\n    if(!cafe){\r\n      let options = [];\r\n      for(let i = 0; i < cafes.length; i++){\r\n        options.push(<option key={cafes[i].cafeId} value={cafes[i].cafeId}>{cafes[i].cafeName}</option>)\r\n      }\r\n      return (<form action=\"\" method=\"GET\">\r\n        <input type=\"select\" label=\"Multiple Select\" multiple>\r\n        <option disabled>Выберите кафе</option>\r\n          {options}\r\n        </input>\r\n        <p><input type=\"submit\" value=\"Выбрать\"></input></p>\r\n      </form>);\r\n    }*/\r\n    await ss.loadSSGraph(cafe.cafeId, cafe.ssBackId);\r\n\r\n    var editor = new Rete.NodeEditor(\"demo@0.1.0\", container);\r\n    global.editor = editor;\r\n    editor.use(ConnectionPlugin);\r\n    editor.use(ReactRenderPlugin, {\r\n      component: StepNode\r\n    });\r\n    editor.use(ContextMenuPlugin);\r\n    editor.use(ConnectionPathPlugin, {\r\n      curve: ConnectionPathPlugin.curveBumpY, // curve identifier (ConnectionPathPlugin.curveStepBefore)\r\n      //options: { vertical: true, curvature: 0.1 }, // optional ( vertical: false, curvature: 0.2)\r\n      arrow: { color: '#b1b1d4', marker: 'M2,-7 L2,7 L18,0 z' },\r\n      transformer: () => ([x1, y1, x2, y2]) => [\r\n        [x1, y1], \r\n        [x1+70, y1], \r\n        (y2-y1 < 50)? [(x1 + x2)/2, y2-50]:[x2, y2-50], \r\n        (y2-y1 < 50)? [x2, y2-50]: [x2, y2], \r\n        [x2, y2],\r\n      ],\r\n    });\r\n    editor.use(AutoArrangePlugin, { margin: {x: 10, y: 10 }, depth: 0 });\r\n\r\n    //editor.trigger('arrange', { node });\r\n    var engine = new Rete.Engine(\"demo@0.1.0\");\r\n    \r\n    for (let step in ss.graph) {\r\n      let component = new StepComponent(step, {        \r\n        question: ss.graph[step].question,\r\n        answers: ss.graph[step].answers,\r\n        href: ss.getSheetUrlByTittle('Шаг ' + step),\r\n      });\r\n      editor.register(component);\r\n    }\r\n    \r\n    editor.on(\r\n      \"process nodecreated noderemoved connectioncreated connectionremoved\",\r\n      async () => {\r\n        console.log(\"process\");\r\n        await engine.abort();\r\n        await engine.process(editor.toJSON());\r\n      }\r\n    );\r\n    editor.on('noderemoved', node => {\r\n      ss.remeberToDeleteStep(node.name);\r\n    });\r\n\r\n    await editor.fromJSON(await ss.toRete());\r\n\r\n    editor.view.resize();\r\n    AreaPlugin.zoomAt(editor);\r\n    global.editorIsLoaded = true;\r\n    loading = false;\r\n  }\r\n  catch(e) {\r\n    loading = false;\r\n    global.editorIsLoaded = true;\r\n    throw e;\r\n  }\r\n}\r\n"],"sourceRoot":""}