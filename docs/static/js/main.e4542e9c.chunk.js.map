{"version":3,"sources":["Nodes.jsx","DBLib.js","index.js","Controls.jsx","spreadsheet.js","editor.jsx"],"names":["StepNode","_Node","Object","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","output","name","JSON","parse","formula","prompt","window","confirm","concat","node","outputs","delete","stringify","update","_this","_this$props","props","bindSocket","bindControl","_this$state","state","controls","inputs","selected","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","map","input","rete_react_render_plugin__WEBPACK_IMPORTED_MODULE_6__","type","socket","io","innerRef","showControl","control","onClick","Node","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_ref","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_callee","response","data","_context","fetch","process","credentials","text","t0","console","message","__webpack_exports__","cookies","Cookies","global","editorIsLoaded","emptyAnswerStr","useState","React","useEffect","clickArrange","editor","alert","trigger","clickCreateStep","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","stepName","sheetId","step","getComponent","ss","addNewStepSheet","StepComponent","question","answers","href","getSheetUrlById","register","t1","createNode","t2","addNode","t3","App","addEventListener","event","preventDefault","_useState","_useState2","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","cafes","setCafes","_useState3","_useState4","options","setOptions","_useState5","_useState6","displayLoading","setDisplayLoading","_useState7","_useState8","displaySaving","setDisplaySaving","search","location","cafeId","split","_datesInit","_callee3","_context3","getAllCafeInfo","get","splice","cafeName","ssBackId","cafe","react__WEBPACK_IMPORTED_MODULE_2___default","datesInit","find","getCafeById","set","path","style","textAlign","action","onChange","target","width","height","saveRete","toJSON","e","generateGraphSheet","display","id","ref","el","init","res","includes","_unused3","rootElement","document","getElementById","ReactDOM","render","stepSocket","Socket","MyReactControl","_React$Component","_getPrototypeOf2","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_len","args","Array","_key","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","setState","putData","react__WEBPACK_IMPORTED_MODULE_6___default","readOnly","Component","InvisibleComponent","_React$Component2","_getPrototypeOf3","_this2","_len2","_key2","ButtonComponent","_React$Component3","_getPrototypeOf4","_this3","_len3","_key3","_this4","emitter","nodes","x","size","addOutput","Output","bind","HrefComponent","_React$Component4","_getPrototypeOf5","_this5","_len4","_key4","rel","HrefControl","_Control","_this6","component","Control","TextControl","_Control2","_this7","_arguments","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","InvisibleControl","_Control3","_this8","_arguments2","ButtonControl","_Control4","_this9","GoogleSpreadsheet","require","apiSheetKey","Spreadsheet","loadSSGraph","ssId","sheet","steps","_loop","_i","_context2","doc","useServiceAccountAuth","loadInfo","sheetsByTitle","sheetName","getRows","loadCells","endColumnIndex","_rawData","trim","_sheet","cell","nextSteps","j","_cell","answer","_question","_answers","_nextSteps","getCell","position","filter","graph","log","_x","_x2","_spreadsheetUrl","getSheetUrlByTittle","tittle","remeberToDeleteStep","sheetsToDelete","toRete","_callee2","reteGraph","pos","idx","_step","_i2","nodeIdx","nextNodeIdx","connections","findNodeIdxByStep","_unused2","loadPositions","_ref3","_context4","_x3","deleteSheets","_ref4","_callee4","stepsCount","graphSheet","rowCount","startIdx","_context5","clearRows","start","end","_x4","_x5","_ref5","_callee5","ssStep","dest","_question2","_context6","columnIdx","printArrayToSheet","_x6","_ref6","_callee6","oldSheetName","rowIdx","_context7","clear","addSheet","title","gridProperties","columnCount","assign","saveUpdatedCells","addStepToGraphSheet","_x7","_x8","_ref7","_callee7","array","_context8","_x9","_x10","_ref8","_callee8","needAddStepToGraphSheet","_context9","_x11","_ref9","_callee9","_cell2","_context10","Math","ceil","_x12","_x13","getQuestion","_ref10","_callee10","row","_context11","_x14","getAnswers","_ref11","_callee11","filteredButtonRows","_context12","_x15","getTimes","_callee12","times","_context13","stepOfTime","loading","_Rete$Component","ssData","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__","D_AMyProject_JS_React_chatbot_editor_FeedMer_Graph_FeedMer_Graph_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","addControl","inp","Rete","Input","combineWith","out","addInput","container","engine","NodeEditor","use","ConnectionPlugin","ReactRenderPlugin","ContextMenuPlugin","ConnectionPathPlugin","curve","curveBumpY","arrow","color","marker","transformer","_ref2","x1","y1","x2","y2","AutoArrangePlugin","margin","y","depth","Engine","on","abort","fromJSON","view","resize","AreaPlugin","zoomAt"],"mappings":"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","file":"static/js/main.e4542e9c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Node, Socket, Control } from \"rete-react-render-plugin\";\r\n\r\nexport class StepNode extends Node {\r\n  \r\n  onClick(output) {\r\n    const name = JSON.parse(output.name);\r\n    if (name.formula) return;\r\n    name.value = prompt('',  name.value);\r\n    if (name.value === null) return\r\n    if (name.value === '') {\r\n      if(!window.confirm(`Удалить ответ ${output.name.value} на шаге ${output.node.name}?`)) return;\r\n      output.node.outputs.delete(output.key)\r\n    };\r\n    output.name = JSON.stringify(name);\r\n    output.node.update();\r\n  }\r\n\r\n  render() {\r\n    const { node, bindSocket, bindControl } = this.props;\r\n    const { outputs, controls, inputs, selected } = this.state;\r\n\r\n    return (\r\n      <div className={`node ${selected}`}>\r\n        {/* Inputs */}\r\n        {inputs.map(input => (\r\n          <div className=\"input\" key={input.key}>\r\n            <Socket\r\n              type=\"input\"\r\n              socket={input.socket}\r\n              io={input}\r\n              innerRef={bindSocket}\r\n            />\r\n            {!input.showControl() && (\r\n              <div className=\"input-title\">{input.name}</div>\r\n            )}\r\n            {input.showControl() && (\r\n              <Control\r\n                className=\"input-control\"\r\n                control={input.control}\r\n                innerRef={bindControl}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n        <div className=\"title\">{node.name}</div>\r\n        {/* Controls */}\r\n        {controls.map(control => (\r\n          <Control\r\n            className=\"control\"\r\n            key={control.key}\r\n            control={control}\r\n            innerRef={bindControl}\r\n          />\r\n        ))}\r\n        {/* Outputs */}\r\n        {outputs.map(output => (\r\n          <div className=\"output\" key={output.key}>\r\n            <div className=\"output-title\" onClick={() => this.onClick(output)} >{\r\n              JSON.parse(output.name).value || ''/*.value*/\r\n            }</div>\r\n            <Socket\r\n              type=\"output\"\r\n              socket={output.socket}\r\n              io={output}\r\n              innerRef={bindSocket}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n","\r\nexport default async function() {\r\n    try {\r\n        /*/return [{ // <<<<< Delete on prod!\r\n            cafeId: '666',\r\n            cafeName: 'Тест редактор графов',\r\n            ssBackId: '1XxQm9w1zkwJ57p3U-1LQj-SPjyeBmjINL-e1NPnNDys',\r\n        }]/**/\r\n        /*/return [{ // <<<<< Delete on prod!\r\n            cafeId: '0',\r\n            cafeName: 'Мама Пицца',\r\n            ssBackId: '1-TgZbqNA0QeiE51pXMTHR_4SMBYd-My-_sD-nUak2oc',\r\n        },\r\n        { \r\n            cafeId: '1',\r\n            cafeName: 'резерв Мама Пицца',\r\n            ssBackId: '1aWoBs_DQdy7jD2WnIGM8BXGdoF40E0fAOO4VBGEbKBY',\r\n        }]/**/\r\n        const response = await fetch(process.env.REACT_APP_FEEDMER_URL+`/getAllCafeInfo`, {\r\n            credentials: 'include'\r\n          });\r\n        const data = await response.text();\r\n        return JSON.parse(data);\r\n    } catch (e) {\r\n        console.error(`getAllCafeInfo failed`, e.message || e);\r\n    }\r\n}\r\n\r\nfunction getCookie(key) {\r\n    var b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\r\n    return b ? b.pop() : \"\";\r\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport init, {StepComponent} from \"./editor\";\nimport getAllCafeInfo from \"./DBLib.js\";\nimport \"./styles.css\";\nimport { Spreadsheet } from \"./spreadsheet.js\";\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nglobal.editorIsLoaded = false;\nglobal.emptyAnswerStr = ' — ';\nconst {useState, useEffect} = React;\nconst clickArrange = () => {\n  if(!(global.editor)) return alert('Редактор занят');\n  global.editor.trigger('arrange', 10);\n}\n\nconst clickCreateStep = async () => {\n  if(!(global.editorIsLoaded)) return alert('Редактор занят');\n  const stepName = prompt('Название шага');\n  if(!stepName) return; \n  try {\n    if (global.editor.getComponent(stepName)) return alert('Шаг с таким именем уже зарегистрирован');\n  } catch{}\n  try {\n    const sheetId = await global.ss.addNewStepSheet(stepName);\n    if(!sheetId) throw new Error('No sheetId');\n    const step = new StepComponent(stepName, {        \n      question: {value: 'question'},\n      answers: [ JSON.stringify({value: 'answer'}) ],\n      href: global.ss.getSheetUrlById(sheetId),\n    }); \n    global.editor.register(step);\n    global.editor.addNode(await step.createNode());\n  }\n  catch{\n    return alert('Не удалось создать лист \"Шаг ' + stepName + '\" в гугл таблице. Возможно такой шаг уже создан');\n  }\n}\n\nconst clickImport = async () => {\n  if(!(global.editorIsLoaded)) return alert('Редактор занят');\n  const ss = new Spreadsheet();\n  await ss.loadSSGraph(-1, prompt('ID гугл-таблицы:'));\n  let graph1 = await ss.toRete();\n  let graph2 = await global.editor.toJSON();\n  const firstId = Object.keys(graph2.nodes).length;\n  for(let i = 0; i < Object.keys(graph1.nodes).length; i++){\n    graph1.nodes[i].id = firstId + i;\n    graph1.nodes[firstId + i] = graph1.nodes[i];\n\n    await global.ss.addStepToGraphSheet(graph1.nodes[i].name);\n    \n    let step = new StepComponent(graph1.nodes[i].name, {        \n      question: '',\n      answers: [],\n      href: '',\n    }); \n    global.editor.register(step);\n    delete graph1.nodes[i];\n  } \n  graph2.nodes = Object.assign({}, graph2.nodes, graph1.nodes);\n  global.editor.fromJSON(graph2);\n  \n  for(let node in graph1.nodes){\n    let ssStep = graph1.nodes[node].name;\n    await global.ss.addStepToGraphSheet(ssStep);\n  }\n  /*\n    >>>>> TO-DO: Протестить эту функцию\n    + загружать инфу о наличии формулы в кнопках\n  */\n\n}\n\nfunction getCafeById(cafeId, cafes){\n  if(!cafeId) return false;\n  const cafe = cafes.find(val => val.cafeId === cafeId);\n  return (cafe)? cafe : false;\n}\n\n\n\nfunction App() {\n  useEffect(() => {\n    const handleWindowBeforeUnload = event => {\n      if (!(global.editorIsLoaded)) {\n        event.preventDefault();\n        alert('Ну видишь же, загружается'); // <<<<<< Не работает!\n      }\n    };\n    window.addEventListener('beforeunload', handleWindowBeforeUnload);\n  }, []);\n  \n  function clickChangeCafe() {\n    if(!(global.editorIsLoaded)) return alert('Редактор занят');\n    window.location.search = '';\n    setCafes();\n  }\n\n  function clickSave() {\n    if(!(global.editorIsLoaded)) return alert('Редактор занят');\n    try{\n      global.editorIsLoaded = false;\n      setDisplaySaving('block');\n      global.ss.saveRete(global.editor.toJSON()).then(\n        result => { setDisplaySaving('none'); global.editorIsLoaded = true; return alert('Сценарий сохранен'); },\n        error => { setDisplaySaving('none'); global.editorIsLoaded = true; return alert('Сценарий не сохранен'); }\n      );\n    }\n    catch(e){\n      setDisplaySaving('none'); \n      global.editorIsLoaded = true;\n      return alert('Сценарий не сохранен, ошибка ' + e.message)\n    }\n  };\n\n  function generateGraphSheet() {\n    if(!(global.editorIsLoaded)) return alert('Редактор занят');\n    if(!window.confirm('Граф буден сохранен в лист \"Граф (сгенерированный)\". Если такой лист уже существует, он будет перезаписан. Продолжить?')) return;\n    global.editorIsLoaded = false;\n    try{\n      global.ss.generateGraphSheet('Граф (сгенерированный)', global.editor.toJSON()).then(\n        result => { global.editorIsLoaded = true; return alert('Лист графа успешно создан'); },\n        error => { global.editorIsLoaded = true; return alert('Не удалость создать лист графа'); }\n      );\n    }\n    catch(e){\n      global.editorIsLoaded = true;\n      return alert('Сценарий не сохранен, ошибка ' + e.message)\n    }\n  };\n\n  const [cafes, setCafes] = useState('');\n  const [options, setOptions] = useState('');\n  const [displayLoading, setDisplayLoading] = useState('block');\n  const [displaySaving, setDisplaySaving] = useState('none');\n\n  let search = window.location.search;\n  search = search.split('=');\n  const cafeId = ((search.length>0)||(search[0] === '?cafeid'))? search[1] : false;\n  \n  useEffect(() => {\n    async function datesInit() {\n      const data = (await getAllCafeInfo()) || [];\n      if(cookies.get('tempGraph')) {\n        data.splice(0, 0, {\n            cafeId: 'tempGraphCached',\n            cafeName: 'Новый граф',\n            ssBackId: cookies.get('tempGraph'),\n        });\n      }\n      data.push({\n          cafeId: 'tempGraph',\n          cafeName: 'Другой граф',\n      });\n      setCafes(data);      \n      setOptions(data.map((cafe) => {\n        return <option value={cafe.cafeId} key={cafe.cafeId}>{cafe.cafeName}</option>;\n      }));\n      //setDropDown(createDropDown(cafes));\n    }    \n    datesInit();\n  }, []);\n\n  if(!cafes)\n    return 'Получаем информацию о кафе от ' + process.env.REACT_APP_FEEDMER_URL+`/getAllCafeInfo....`;\n  let cafe = getCafeById(cafeId, cafes);\n  if((cafe) && (!cafe.ssBackId)) {\n    cafe.ssBackId = prompt('ID гугл-таблицы:');\n    if(cafe.ssBackId) {\n      cookies.set(cafe.cafeId, cafe.ssBackId, { path: '/' });\n      window.location.search = '?cafeId=tempGraphCached';\n      return;\n    }\n    else cafe = null;\n  }   \n  if(cafe){ \n    try {\n      return (\n        <div className=\"App\">\n          <div style={{ textAlign: \"left\", width: \"100vw\", height: \"100vh\" }}>\n            <div className='header'>\n              <input type='button' value=\"Сохранить\" className='menu_button' onClick={clickSave} />\n              <input type='button' value=\"Выбор кафе\" className='menu_button' onClick={clickChangeCafe} />\n              {//<input type='button' value=\"Импорт\" class='menu_button' onClick={clickImport} />\n              }\n              <input type='button' value=\"Автоперестановка\" className='menu_button' onClick={clickArrange} />\n              <input type='button' value=\"Создать лист графа\" className='menu_button' onClick={generateGraphSheet} />\n              <input type='button' value=\"Создать шаг\" className='step_button' onClick={clickCreateStep} />\n              <b>{cafe.cafeName}</b>\n            </div>\n            <div  style={{display: displayLoading}}>\n              <h1> Загружаем... </h1>\n            </div>\n            <div  style={{display: displaySaving}}>\n              <h1> Сохраняем... </h1>\n            </div>\n            <div id='canvas' ref={el => (init(el, cafe))\n              .then((res) => { if (res !== false) setDisplayLoading('none') } )\n              .catch(e => {\n                try {\n                  if(!e.message.includes('style')) throw e;//setDisplayLoading('block');\n                  //else throw e;\n                } catch { \n                  alert('Не удалось загрузить граф ' +e);\n                  console.error(e);\n                  setDisplayLoading('none')\n                }\n                }) \n              } />\n          </div>\n        </div>\n      );\n    }\n    catch(e) {\n      return alert('Не удалось отобразить выбранный граф');\n    }\n  }\n  else{\n    return (\n      <div className=\"App\">\n        <h1>FeedMer chatbot constructor</h1>\n        <div style={{ textAlign: \"left\" }}>\n          <form action=\"\" method=\"GET\">\n            <label>\n            Выберите кафе:\n            <select value={cafes} name='cafeid' onChange={(event) => setCafes(event.target.value)}>\n                {options}\n            </select>\n            </label>\n            <input type=\"submit\" value=\"Выбрать\" className='menu_button' />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);","import React from \"react\";\r\nimport { Control, Output, Socket} from \"rete\";\r\n\r\nvar stepSocket = new Socket(\"Соединить с другим шагом\");\r\n\r\nclass MyReactControl extends React.Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.name\r\n    });\r\n    //console.log(this.props);\r\n    this.props.putData(this.props.id, this.props.name);\r\n  }\r\n  onChange(event) {\r\n    this.props.putData(this.props.id, event.target.value);\r\n    //this.props.emitter.trigger(\"process\");\r\n    this.setState({\r\n      name: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //<textarea readOnly>{this.state.name}</textarea>\r\n      <input value={this.state.name} readOnly/* onChange={this.onChange.bind(this)}*/ />\r\n    );\r\n  }\r\n}\r\n\r\nclass InvisibleComponent extends React.Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.name\r\n    });\r\n    this.props.putData(this.props.id, this.props.name);\r\n  }\r\n  onChange(event) {\r\n    this.props.putData(this.props.id, event.target.value);\r\n    this.setState({\r\n      name: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (<b/>);\r\n  }\r\n}\r\n\r\nclass ButtonComponent extends React.Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.name\r\n    });\r\n  }\r\n  onClick(event) {\r\n    const node = this.props.emitter.nodes.find(x => {return this.props.name === x.name})\r\n    const text = JSON.stringify({ value: 'answer' + (node.outputs.size + 1)});\r\n    if(node){\r\n      node.addOutput(\r\n        new Output(text, text, stepSocket, false)\r\n      );\r\n      node.update();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"right_div\">\r\n        <button type=\"button\" className=\"node_submit\" onClick={this.onClick.bind(this)}>+</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass HrefComponent extends React.Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.props.name\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <a href={this.state.name} target=\"_blank\" rel=\"noopener noreferrer\">\"Перейти к таблице\"</a>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport class HrefControl extends Control {\r\n  constructor(emitter, key, name) {\r\n    super(key);\r\n    this.render = \"react\";\r\n    this.component = HrefComponent;\r\n    this.props = {\r\n      emitter,\r\n      id: key,\r\n      name,\r\n      //putData: () => this.putData.apply(this, arguments)\r\n    };\r\n  }\r\n}\r\n\r\nexport class TextControl extends Control {\r\n  constructor(emitter, key, name) {\r\n    super(key);\r\n    this.render = \"react\";\r\n    this.component = MyReactControl;\r\n    this.props = {\r\n      emitter,\r\n      id: key,\r\n      name,\r\n      putData: () => this.putData.apply(this, arguments)\r\n    };\r\n  }\r\n}\r\n\r\nexport class InvisibleControl extends Control {\r\n  constructor(emitter, key, name) {\r\n    super(key);\r\n    this.render = \"react\";\r\n    this.component = InvisibleComponent;\r\n    this.props = {\r\n      emitter,\r\n      id: key,\r\n      name,\r\n      putData: () => this.putData.apply(this, arguments)\r\n    };\r\n  }\r\n}\r\n\r\nexport class ButtonControl extends Control {\r\n  constructor(emitter, key, name) {\r\n    super(key);\r\n    this.render = \"react\";\r\n    this.component = ButtonComponent;\r\n    this.props = {\r\n      emitter,\r\n      id: key,\r\n      name,\r\n      //putData: () => this.putData.apply(this, arguments)\r\n    };\r\n  }\r\n}\r\n\r\nexport { stepSocket };\r\n","//import { useState } from \"react\";\r\nconst POS_COLUMN_IDX = 23;\r\nconst oneStepRowCount = 30; // Не менять\r\nconst { GoogleSpreadsheet } = require('google-spreadsheet');\r\nconst apiSheetKey = require('./client_secret_google_sheets.json');\r\n        //const [error, setError] = useState(Error());\r\n\r\nexport class Spreadsheet {\r\n    constructor(){\r\n        this.graph = null;\r\n        this.sheetName =  'Граф';\r\n        this.sheetsToDelete = [];\r\n    }\r\n    loadSSGraph = async (cafeId, ssId) => {        \r\n        try{\r\n            if(ssId === this.ssId)\r\n                return;\r\n            this.cafeId = cafeId;\r\n            this.ssId = ssId;\r\n            this.doc = new GoogleSpreadsheet(this.ssId);\r\n            await this.doc.useServiceAccountAuth(apiSheetKey);\r\n            await this.doc.loadInfo();\r\n            const sheet = await this.doc.sheetsByTitle[this.sheetName];\r\n            if (!sheet) throw new Error('Не найден лист \"' + this.sheetName + '\"');\r\n            let res = await sheet.getRows();\r\n            await sheet.loadCells({endColumnIndex: 6});\r\n            for (let i = 0; i < res.length; i++){\r\n                if (res[i]._rawData[2] !== undefined) res[i]._rawData[2] = res[i]._rawData[2].trim();\r\n            }\r\n            if(!(res) || (res.length < 1)){\r\n                throw new Error('There are no one rows after loading from Google')\r\n            }\r\n\r\n            // Add formuls to question and answers\r\n            let steps = {};\r\n            for(let i = 0; i < res.length; i++){                \r\n                let stepName = res[i].step;\r\n                if((stepName) && (!Object.keys(steps).includes(stepName))){\r\n                    let sheet = this.doc.sheetsByTitle['Шаг ' + stepName];\r\n                    if (sheet) {\r\n                        await sheet.loadCells({ endColumnIndex: 3 });\r\n                        let cell = sheet.getCell(0, 0);\r\n                        let question = { value: cell.value, formula: cell.formula };\r\n\r\n                        let answers = [];\r\n                        let nextSteps = [];\r\n                        for (let j = 1; j < oneStepRowCount; j++) {\r\n                            let cell = sheet.getCell(j, 0);\r\n                            if ((cell.value) || (cell.formula)) {\r\n                                let answer = JSON.stringify({ value: cell.value, formula: cell.formula })\r\n                                if (answers.includes(answer)) continue;\r\n                                answers.push(answer);\r\n                                cell = sheet.getCell(j, 1);\r\n                                nextSteps.push(JSON.stringify({ value: cell.value, formula: cell.formula }));\r\n                            }\r\n                        }\r\n                        await sheet.loadCells('A1:Z1');\r\n                        cell = sheet.getCell(0, POS_COLUMN_IDX);\r\n                        steps[stepName] = {\r\n                            question: question,\r\n                            answers: answers,\r\n                            nextSteps: nextSteps,\r\n                            position: JSON.parse(cell.value) || null,\r\n                        };\r\n                    }\r\n                    else {\r\n                        let question = { value: res[i].question };\r\n                        let answers = res.filter( x => x.step === stepName );\r\n                        answers.forEach(x => { x.answer = JSON.stringify({ value: x.answer }) });\r\n                        let nextSteps = res.filter( x => x.step === stepName );\r\n                        //nextSteps.forEach(x => { x.nextStep = JSON.stringify({ value: x.nextStep }) });\r\n                        steps[stepName] = {\r\n                            question: question,\r\n                            answers: answers,\r\n                            nextSteps: nextSteps,\r\n                            position: null,\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n            this.graph = steps;\r\n\r\n            console.log('Graph are loaded');\r\n            return true;\r\n        }\r\n        catch(e){\r\n            //setError(e);\r\n            console.error(`Cannot load graph from goodle with ssId = ${this.ssId}`, Error(e.message || e));\r\n            throw e; \r\n        }\r\n    }\r\n\r\n    getSheetUrlById = (sheetId) => {\r\n        return this.doc._spreadsheetUrl + '#gid=' + sheetId;\r\n    }\r\n\r\n    getSheetUrlByTittle = (tittle) => {\r\n        const sheet = this.doc.sheetsByTitle[tittle];\r\n        const url = (sheet)? this.getSheetUrlById(sheet.sheetId) : null;\r\n        return url;\r\n    }\r\n\r\n    remeberToDeleteStep = (stepName) => {                \r\n        this.sheetsToDelete.push(stepName);\r\n    }\r\n\r\n    toRete = async() => {\r\n        let reteGraph = {\r\n            id: `demo@0.1.0`,//`cafe${this.cafeId}`,\r\n            nodes: {}\r\n        }\r\n        let pos = -800;\r\n        let idx = 0;\r\n        for (let step in this.graph) {\r\n            try{\r\n                let answers = this.graph[step].answers;\r\n                let outputs = {};\r\n                for(let i = 0; i < answers.length; i++){\r\n                    if(answers[i])\r\n                        outputs[answers[i]] = { connections: [] }\r\n                }\r\n                reteGraph.nodes[idx] = {\r\n                    id: idx,\r\n                    data: {},\r\n                    inputs: { \"step\": { connections: [] } },\r\n                    name: step,\r\n                    outputs: outputs,\r\n                    position: this.graph[step].position || [pos+=300, -100],\r\n                }\r\n                idx++;\r\n            }\r\n            catch(e){}\r\n        }\r\n\r\n        //Connections\r\n        for (let step in this.graph) {\r\n            for (let i = 0; i < this.graph[step].nextSteps.length; i++) {\r\n                try{\r\n                    //if(this.graph[i].answer == 'Назад') continue;\r\n                    let nodeIdx = this.findNodeIdxByStep(reteGraph, step);\r\n                    let nextNodeIdx = this.findNodeIdxByStep(reteGraph, JSON.parse(this.graph[step].nextSteps[i]).value);\r\n                    if((nextNodeIdx === false)||(nodeIdx === false)||(nextNodeIdx === undefined)||(nodeIdx === undefined)) continue;\r\n                    reteGraph.nodes[nodeIdx].outputs[this.graph[step].answers[i]] = {  \r\n                        connections: [ \r\n                            {\r\n                                node: nextNodeIdx,\r\n                                input: 'step',\r\n                                data: {}\r\n                            } \r\n                        ] \r\n                    }\r\n                    reteGraph.nodes[nextNodeIdx].inputs['step'].connections.push({\r\n                        node: nodeIdx,\r\n                        output: this.graph[step].answers[i],\r\n                        data: {},\r\n                    } )\r\n                }\r\n                catch{\r\n                    try{\r\n                        console.error(`load connection failed between steps \"${step}\" and \"${JSON.parse(this.graph[step].nextSteps[i]).value}\"`)\r\n                    }catch{}\r\n                }\r\n            }\r\n        }\r\n\r\n        return reteGraph;\r\n    }\r\n    \r\n    loadPositions = async (stepName) => {     \r\n        //{valueRenderOption: 'FORMULA'}   \r\n        try{\r\n            const sheet = await this.doc.sheetsByTitle['Шаг ' + stepName];\r\n            if(!sheet) return;\r\n            await sheet.loadCells('A1:Z1');\r\n            let cell = sheet.getCell(0, POS_COLUMN_IDX);\r\n            return JSON.parse(cell.value)\r\n        }\r\n        catch(e){\r\n            console.error(`Cannot load coordinates for step = ${stepName}`, Error(e.message || e));\r\n        }\r\n    }\r\n\r\n    findNodeIdxByStep = (reteGraph, step) => {\r\n        for(let node in reteGraph.nodes){\r\n            if(reteGraph.nodes[node].name === step)\r\n                return node;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    deleteSheets = async(sheetsToDelete, stepsCount) => {\r\n        if(!sheetsToDelete || !this.sheetName || (sheetsToDelete.length < 1)) return;\r\n        const graphSheet = await this.doc.sheetsByTitle[this.sheetName];\r\n        const rowCount = (sheetsToDelete.length + stepsCount) * oneStepRowCount + 1;\r\n        await graphSheet.loadCells('A1:A' + rowCount);\r\n        for(let i = 0; i < sheetsToDelete.length; i++){        \r\n            const sheet = this.doc.sheetsByTitle['Шаг ' + sheetsToDelete[i]];\r\n            if(sheet) await sheet.delete();\r\n            //sheet.clearRows\r\n            let startIdx = -1;\r\n            //let endIdx = -1;\r\n            for(let j = 1; j < rowCount; j++){\r\n                let cell = graphSheet.getCell(j, 0);\r\n                if(cell.value === sheetsToDelete[i]) {\r\n                    if(startIdx<0) startIdx = j;\r\n                    //endIdx = j;\r\n                }\r\n            }\r\n            await graphSheet.clearRows({start: startIdx+1, end: startIdx+oneStepRowCount});  \r\n        }\r\n        this.sheetsToDelete = [];        \r\n    }\r\n\r\n    saveRete = async(reteGraph) => {\r\n        await this.deleteSheets(this.sheetsToDelete, Object.keys(reteGraph.nodes).length);\r\n        for(let node in reteGraph.nodes){            \r\n            let question = (reteGraph.nodes[node].data.question.formula) ? reteGraph.nodes[node].data.question.formula : reteGraph.nodes[node].data.question.value;\r\n            let ssStep = [\r\n                //[reteGraph.nodes[node].name],\r\n                [\r\n                    {value: question },\r\n                    {value: JSON.stringify(reteGraph.nodes[node].position), columnIdx: POS_COLUMN_IDX},\r\n                ],\r\n            ]\r\n            for(let output in reteGraph.nodes[node].outputs){\r\n                try{\r\n                    let dest;\r\n                    if(reteGraph.nodes[node].outputs[output].connections.length < 1)\r\n                        dest = { name: \"\", data: { question: \"\" }};\r\n                    else\r\n                        dest = reteGraph.nodes[reteGraph.nodes[node].outputs[output].connections[0].node];\r\n                    let answer = JSON.parse(output);\r\n                    answer = (answer.formula) ? answer.formula : answer.value;\r\n                    let question = (dest.data.question.formula) ? dest.data.question.formula : dest.data.question.value;\r\n                    ssStep.push([\r\n                        {value: answer},\r\n                        {value: dest.name},\r\n                        {value: question},\r\n                    ]);\r\n                    /*ssGraph.push({\r\n                        step: reteGraph.nodes[node].name,\r\n                        question: reteGraph.nodes[node].data.question,\r\n                        answer: output,\r\n                        nextStep: dest.name,\r\n                        nextQuestion: dest.data.question,\r\n                    })*/\r\n                }\r\n                catch{}\r\n            }\r\n            await this.printArrayToSheet(ssStep, \"Шаг \" + reteGraph.nodes[node].name);\r\n        }\r\n        //await this.printArrayToSheet(ssGraph, \"Граф (собранный)\");\r\n    }\r\n\r\n    generateGraphSheet = async(sheetName, reteGraph) => {\r\n        try {\r\n            const oldSheetName = this.sheetName;\r\n            this.sheetName = sheetName;\r\n        \r\n            let sheet;\r\n            if(this.doc.sheetsByTitle[sheetName]) {\r\n                sheet = this.doc.sheetsByTitle[sheetName];\r\n                sheet.clear();\r\n            } else {\r\n                sheet = await this.doc.addSheet({\r\n                    \"title\": sheetName,\r\n                    \"gridProperties\": {\r\n                        \"rowCount\": 6000,\r\n                        \"columnCount\": 30\r\n                    }\r\n                });\r\n            }\r\n            await sheet.loadCells('A1:E1');\r\n            let cell = await sheet.getCell(0, 0);\r\n            Object.assign(cell, { value: 'step' } ); \r\n            cell = await sheet.getCell(0, 1);\r\n            Object.assign(cell, { value: 'question' } );\r\n            cell = await sheet.getCell(0, 2);\r\n            Object.assign(cell, { value: 'answer' } );\r\n            cell = await sheet.getCell(0, 3);\r\n            Object.assign(cell, { value: 'nextStep' } );\r\n            cell = await sheet.getCell(0, 4);\r\n            Object.assign(cell, { value: 'nextQuestion' } );\r\n            await sheet.saveUpdatedCells();\r\n\r\n            let rowIdx = 0;\r\n            for(let node in reteGraph.nodes){\r\n                let ssStep = reteGraph.nodes[node].name;\r\n                await this.addStepToGraphSheet(ssStep, rowIdx);\r\n                rowIdx += oneStepRowCount;\r\n            }\r\n            this.sheetName = oldSheetName;\r\n        }\r\n        catch (e) {\r\n            console.error('generateGraphSheet failed!', e);\r\n            throw e;\r\n\r\n        }\r\n    }\r\n\r\n    printArrayToSheet = async(array, sheetName) => {\r\n        try {\r\n            let sheet;\r\n            /*const doc = new GoogleSpreadsheet(this.ssId);\r\n            await doc.useServiceAccountAuth(apiSheetKey);\r\n            await doc.loadInfo();*/\r\n    \r\n            if(this.doc.sheetsByTitle[sheetName]) {\r\n                sheet = this.doc.sheetsByTitle[sheetName];\r\n                sheet.clear();\r\n            } else {\r\n                sheet = await this.doc.addSheet({\r\n                    \"title\": sheetName,\r\n                    \"gridProperties\": {\r\n                        \"rowCount\": oneStepRowCount,\r\n                        \"columnCount\": 30\r\n                    }\r\n                });\r\n            }\r\n    \r\n            await sheet.loadCells(['A1:Z1', 'A1:C'+array.length]);\r\n\r\n            if (array.length === 0) {\r\n                let initCell= await sheet.getCell(0,0);\r\n                initCell.value = \"Нет данных\";\r\n            }\r\n    \r\n            for (let i=0; i<array.length; i++) {\r\n                if(array[i] === undefined || array[i] === null) continue;\r\n                for(let j=0; j<=array[i].length; j++)  {\r\n                    if(!array[i][j] || !(array[i][j].value)) continue;\r\n                    let cell = await sheet.getCell(i, array[i][j].columnIdx || j);\r\n                    Object.assign(cell, array[i][j]);    \r\n                }\r\n            }\r\n            await sheet.saveUpdatedCells();\r\n        } catch (e) { \r\n            console.error(`printing to spreadsheet (id: ${this.ssId}) is failed`, e.message);\r\n            throw e; \r\n        }\r\n    }\r\n\r\n    addNewStepSheet = async(stepName) => {   \r\n        try{           \r\n            let sheet;\r\n            let needAddStepToGraphSheet = false;\r\n            if(this.doc.sheetsByTitle['Шаг ' + stepName]) {\r\n                sheet = this.doc.sheetsByTitle['Шаг ' + stepName];\r\n                sheet.clear();\r\n            }\r\n            else {\r\n                needAddStepToGraphSheet = true;\r\n                 sheet = await this.doc.addSheet({\r\n                    \"title\": 'Шаг ' + stepName,\r\n                    \"gridProperties\": {\r\n                        \"rowCount\": oneStepRowCount,\r\n                        \"columnCount\": 30\r\n                    }\r\n                });\r\n            }\r\n            const array = [\r\n                [{value: \"question\"}],\r\n                [{value: \"answer1\"}, {value: \"nextStep1\"}, {value: \"nextQuestion1\"}],\r\n\r\n            ]\r\n            await this.printArrayToSheet(array, 'Шаг ' + stepName);\r\n            if (needAddStepToGraphSheet) await this.addStepToGraphSheet(stepName);\r\n            return sheet.sheetId;\r\n        }\r\n        catch(e){\r\n            console.error('addNewSheet failed!', e.message);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    addStepToGraphSheet = async(stepName, rowCount) => {\r\n        const sheet = await this.doc.sheetsByTitle[this.sheetName];\r\n        if(rowCount === undefined) {\r\n            rowCount = (await sheet.getRows()).length || 0;\r\n            rowCount = Math.ceil(rowCount / oneStepRowCount) * oneStepRowCount;\r\n        }\r\n    \r\n        await sheet.loadCells(`A${rowCount + 2}:E${rowCount + oneStepRowCount +2}`);\r\n        let cell = await sheet.getCell(rowCount+1, 2);\r\n        Object.assign(cell, {value: `=ЕСЛИОШИБКА(FILTER('Шаг ${stepName}'!A2:A${oneStepRowCount}; НЕ(ЕПУСТО(ЕСЛИОШИБКА('Шаг ${stepName}'!A2:A${oneStepRowCount})))))`});   \r\n        cell = await sheet.getCell(rowCount+1, 3);\r\n        Object.assign(cell, {value: `=ЕСЛИОШИБКА(FILTER('Шаг ${stepName}'!B2:B${oneStepRowCount}; НЕ(ЕПУСТО(ЕСЛИОШИБКА('Шаг ${stepName}'!B2:B${oneStepRowCount})))))`});   \r\n        cell = await sheet.getCell(rowCount+1, 4);\r\n        Object.assign(cell, {value: `=ЕСЛИОШИБКА(FILTER('Шаг ${stepName}'!C2:C${oneStepRowCount}; НЕ(ЕПУСТО(ЕСЛИОШИБКА('Шаг ${stepName}'!C2:C${oneStepRowCount})))))`});   \r\n        for(let i = rowCount + 2; i < rowCount + oneStepRowCount + 2; i++){\r\n            let cell = await sheet.getCell(i-1, 0);\r\n            Object.assign(cell, {value: `=ЕСЛИ(ЕПУСТО(C${i});\"\";\"${stepName}\")`});    \r\n            cell = await sheet.getCell(i-1, 1);\r\n            Object.assign(cell, {value: `=ЕСЛИ(ЕПУСТО(C${i});\"\";ЕСЛИОШИБКА(FILTER('Шаг ${stepName}'!A$1; НЕ(ЕПУСТО(ЕСЛИОШИБКА('Шаг ${stepName}'!A$1))))))`}); \r\n        }\r\n        await sheet.saveUpdatedCells();\r\n    }\r\n    \r\n\r\n    getQuestion = async(step) => { //change to UserId\r\n        try{\r\n            if(!this.graph) throw Error('Graph is not loaded')\r\n            let row = this.graph.find(x => x.step === step);\r\n            return row.question;\r\n        } catch (e){\r\n            console.error(`Cannot get question for step ${step}`, e.message || e);\r\n        }\r\n    }\r\n    getAnswers = async(step) => {\r\n        try{\r\n            if(!this.graph) throw Error('Graph is not loaded')\r\n            let answers = this.graph.filter(x => x.step === step/* && x.answer !== \"anyText\"*/)\r\n            let filteredButtonRows = [];\r\n            answers.forEach(x => { if (!filteredButtonRows.includes(x.answer)) filteredButtonRows.push(x.answer) } );\r\n            return filteredButtonRows;\r\n        } catch (e){\r\n            console.error(`Cannot get buttons for step ${step}`, e.message || e);\r\n            return [];\r\n        }\r\n    }\r\n\r\n    getTimes = async () => {\r\n        try{\r\n            if(!this.graph) throw Error('Graph is not loaded')\r\n            let filteredButtonRows = this.graph.filter(x => x.step === global.stepOfTime && x.answer !== \"anyText\");\r\n            let times = [];\r\n            filteredButtonRows.forEach(x => times.push(x.answer));\r\n            //times = times.filter(x => isTimeButton(x));\r\n            return times;\r\n        } catch (e){\r\n            console.error(`Cannot get times`, e.message || e);\r\n            return [];\r\n        }\r\n    }\r\n}","import Rete from \"rete\";\r\nimport ReactRenderPlugin from \"rete-react-render-plugin\";\r\nimport ConnectionPlugin from \"rete-connection-plugin\";\r\nimport ContextMenuPlugin from \"rete-context-menu-plugin\";\r\nimport ConnectionPathPlugin from 'rete-connection-path-plugin';\r\nimport AreaPlugin from \"rete-area-plugin\";\r\nimport AutoArrangePlugin from 'rete-auto-arrange-plugin';\r\nimport { StepNode } from \"./Nodes\";\r\nimport { TextControl, InvisibleControl, HrefControl, ButtonControl, stepSocket } from \"./Controls\";\r\nimport { Spreadsheet } from \"./spreadsheet.js\";\r\n\r\n\r\nconst ss = new Spreadsheet();\r\nglobal.ss = ss;\r\nlet loading = false;\r\n\r\n\r\nexport class StepComponent extends Rete.Component {\r\n  constructor(name, ssData) {\r\n    super(name);\r\n    this.ssData = ssData;\r\n  }\r\n\r\n  builder(node) {\r\n    node.addControl(new HrefControl(this.editor, \"href\", this.ssData.href)); \r\n    node.addControl(new TextControl(this.editor, \"question\", this.ssData.question.value || '')); \r\n    node.addControl(new InvisibleControl(this.editor, \"question_formula\", this.ssData.question.formula));\r\n    node.addControl(new ButtonControl(this.editor, \"addAnswer\", this.name)); \r\n    node.data = { \"question\": this.ssData.question };\r\n    let inp = new Rete.Input(\"step\", \"\", stepSocket, true);\r\n    stepSocket.combineWith(inp);\r\n    for(let i = 0; i < this.ssData.answers.length; i++){\r\n      try {\r\n        if((this.ssData.answers[i]) && (this.ssData.answers[i].includes('value'))) {\r\n          let obj = JSON.parse(this.ssData.answers[i]);\r\n          if ((!obj.value) && (!obj.formula)) continue;\r\n          let out = new Rete.Output(this.ssData.answers[i], this.ssData.answers[i], stepSocket, false);\r\n          node.addOutput(out);\r\n        }\r\n      }\r\n      catch(e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    \r\n\r\n    return node.addInput(inp)\r\n  }\r\n\r\n  worker(node, inputs, outputs) {\r\n    //console.log(node.data.greeting);\r\n  }\r\n}\r\n\r\nexport default async function(container, cafe) {\r\n  if (loading) return false;\r\n  loading = true;\r\n  try {\r\n    if(!cafe) return;\r\n    global.editorIsLoaded = false;\r\n    /*const cafes = await cafePromise;\r\n    let cafe;\r\n    if(cafeId)\r\n      cafe = cafes.find(val=>  val.cafeId === cafeId);\r\n    if(!cafe){\r\n      let options = [];\r\n      for(let i = 0; i < cafes.length; i++){\r\n        options.push(<option key={cafes[i].cafeId} value={cafes[i].cafeId}>{cafes[i].cafeName}</option>)\r\n      }\r\n      return (<form action=\"\" method=\"GET\">\r\n        <input type=\"select\" label=\"Multiple Select\" multiple>\r\n        <option disabled>Выберите кафе</option>\r\n          {options}\r\n        </input>\r\n        <p><input type=\"submit\" value=\"Выбрать\"></input></p>\r\n      </form>);\r\n    }*/\r\n    await ss.loadSSGraph(cafe.cafeId, cafe.ssBackId);\r\n\r\n    var editor = new Rete.NodeEditor(\"demo@0.1.0\", container);\r\n    global.editor = editor;\r\n    editor.use(ConnectionPlugin);\r\n    editor.use(ReactRenderPlugin, {\r\n      component: StepNode\r\n    });\r\n    editor.use(ContextMenuPlugin);\r\n    editor.use(ConnectionPathPlugin, {\r\n      curve: ConnectionPathPlugin.curveBumpY, // curve identifier (ConnectionPathPlugin.curveStepBefore)\r\n      //options: { vertical: true, curvature: 0.1 }, // optional ( vertical: false, curvature: 0.2)\r\n      arrow: { color: '#b1b1d4', marker: 'M2,-7 L2,7 L18,0 z' },\r\n      transformer: () => ([x1, y1, x2, y2]) => [\r\n        [x1, y1], \r\n        [x1+70, y1], \r\n        (y2-y1 < 50)? [(x1 + x2)/2, y2-50]:[x2, y2-50], \r\n        (y2-y1 < 50)? [x2, y2-50]: [x2, y2], \r\n        [x2, y2],\r\n      ],\r\n    });\r\n    editor.use(AutoArrangePlugin, { margin: {x: 10, y: 10 }, depth: 0 });\r\n\r\n    //editor.trigger('arrange', { node });\r\n    var engine = new Rete.Engine(\"demo@0.1.0\");\r\n    \r\n    for (let step in ss.graph) {\r\n      let component = new StepComponent(step, {        \r\n        question: ss.graph[step].question,\r\n        answers: ss.graph[step].answers,\r\n        href: ss.getSheetUrlByTittle('Шаг ' + step),\r\n      });\r\n      editor.register(component);\r\n    }\r\n    \r\n    editor.on(\r\n      \"process nodecreated noderemoved connectioncreated connectionremoved\",\r\n      async () => {\r\n        console.log(\"process\");\r\n        await engine.abort();\r\n        await engine.process(editor.toJSON());\r\n      }\r\n    );\r\n    editor.on('noderemoved', node => {\r\n      ss.remeberToDeleteStep(node.name);\r\n    });\r\n\r\n    await editor.fromJSON(await ss.toRete());\r\n\r\n    editor.view.resize();\r\n    AreaPlugin.zoomAt(editor);\r\n    global.editorIsLoaded = true;\r\n    loading = false;\r\n  }\r\n  catch(e) {\r\n    loading = false;\r\n    global.editorIsLoaded = true;\r\n    throw e;\r\n  }\r\n}\r\n"],"sourceRoot":""}